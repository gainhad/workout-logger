{"ast":null,"code":"import _slicedToArray from \"/Users/Hadley/src/workout-logger/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Hadley/src/workout-logger/src/components/Workout.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport LiftLog from './LiftLog';\nimport Modal from './Modal';\nimport Backdrop from './Backdrop';\nimport E1rmDisplay from './E1rmDisplay';\nimport RestTimer from './RestTimer';\nimport useInterval from '../utils/useInterval';\nimport soundFile from '../assets/audio/bell.wav';\nimport './Workout.scss';\n\nconst Workout = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isBlurred = _useState2[0],\n        setIsBlurred = _useState2[1];\n\n  const _useState3 = useState({\n    id: null,\n    child: null\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        modal = _useState4[0],\n        setModal = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        editSetModal = _useState6[0],\n        setEditSetModal = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        liftEditable = _useState8[0],\n        setLiftEditable = _useState8[1];\n\n  const _useState9 = useState([{\n    name: 'deadlift',\n    sets: [{\n      weight: 230,\n      reps: 5,\n      rpe: 6\n    }, {\n      weight: 245,\n      reps: 5,\n      rpe: 7\n    }, {\n      weight: 255,\n      reps: 5,\n      rpe: 8\n    }, {\n      weight: 255,\n      reps: 5,\n      rpe: 8\n    }]\n  }, {\n    name: 'squat',\n    sets: [{\n      weight: 230,\n      reps: 5,\n      rpe: 6\n    }, {\n      weight: 245,\n      reps: 5,\n      rpe: 7\n    }, {\n      weight: 255,\n      reps: 5,\n      rpe: 8\n    }, {\n      weight: 255,\n      reps: 5,\n      rpe: 8\n    }]\n  }, {\n    name: 'bench press',\n    sets: [{\n      weight: 100,\n      reps: 7,\n      rpe: 6\n    }, {\n      weight: 115,\n      reps: 7,\n      rpe: 7\n    }, {\n      weight: 125,\n      reps: 7,\n      rpe: 8\n    }, {\n      weight: 125,\n      reps: 7,\n      rpe: 8\n    }, {\n      weight: 125,\n      reps: 7,\n      rpe: 8\n    }]\n  }]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        lifts = _useState10[0],\n        setLifts = _useState10[1];\n\n  const _useState11 = useState(0),\n        _useState12 = _slicedToArray(_useState11, 2),\n        currentLiftIndex = _useState12[0],\n        setCurrentLiftIndex = _useState12[1];\n\n  const _useState13 = useState([{\n    name: 'rest',\n    decrement: true,\n    started: false,\n    finished: false,\n    seconds: 0\n  }]),\n        _useState14 = _slicedToArray(_useState13, 2),\n        timers = _useState14[0],\n        setTimers = _useState14[1]; //update times every second\n\n\n  useInterval(() => {\n    setTimers(timers.map(timer => {\n      if (timer.started) {\n        if (timer.decrement && timer.seconds > 0) {\n          return Object.assign(timer, {\n            seconds: timer.seconds - 1\n          });\n        } else if (timer.decrement) {\n          return Object.assign(timer, {\n            finished: true\n          });\n        } else if (!timer.decrement) {\n          return Object.assign(timer, {\n            seconds: timer.seconds + 1\n          });\n        } else {\n          return timer;\n        }\n      } else {\n        return timer;\n      }\n    }));\n  }, 1000);\n\n  function startIndividualTimer(timerName, newSeconds) {\n    setTimers(timers.map(timer => {\n      if (timer.name === timerName) {\n        return Object.assign(timer, {\n          seconds: newSeconds,\n          started: true,\n          finished: false\n        });\n      } else {\n        return timer;\n      }\n    }));\n  }\n\n  function closeModal() {\n    setModal({\n      id: null,\n      child: null\n    });\n  }\n\n  function toggleNewLiftModal() {\n    setNewLiftModal(!newLiftModal);\n    setIsBlurred(!isBlurred);\n  }\n\n  function addSet(newWeight, newReps, newRpe) {\n    const newSet = {\n      weight: newWeight,\n      reps: newReps,\n      rpe: newRpe\n    };\n    setLifts(lifts.map((lift, index) => {\n      if (index === currentLiftIndex) {\n        lift.sets = [...lift.sets, newSet];\n      }\n\n      return lift;\n    }));\n  }\n\n  function addLift(newLift) {\n    setLifts([{\n      name: newLift,\n      sets: []\n    }, ...lifts]);\n  }\n\n  const maxSet = lifts[currentLiftIndex].sets.length ? lifts[currentLiftIndex].sets.reduce((a, b) => {\n    return a.weight >= b.weight ? a : b;\n  }) : null;\n  const restTimer = timers.find(timer => timer.name === 'rest'); // Play sound when rest finishes\n\n  useEffect(() => {\n    if (restTimer.finished) {\n      const sound = new Audio();\n      sound.src = soundFile;\n      sound.play();\n    }\n  }, [restTimer.finished]);\n  useEffect(() => {\n    if (editSetModal) {\n      setIsBlurred(true);\n    } else {\n      setIsBlurred(false);\n    }\n  }, [editSetModal]);\n  useEffect(() => {\n    if (modal.child) {\n      setIsBlurred(true);\n    } else {\n      setIsBlurred(false);\n    }\n  }, [modal.child]);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    id: \"workout-screen\",\n    className: isBlurred ? 'blurred' : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    className: \"upper-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"arrow-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"\\u2190\")), restTimer.started && !restTimer.finished && React.createElement(RestTimer, {\n    secondsRemaining: restTimer.seconds,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), restTimer.finished && React.createElement(\"div\", {\n    className: \"rest-timer\",\n    id: \"rest-finished\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"REST FINISHED!\")), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => {\n      setModal({\n        id: 'times-modal',\n        child: React.createElement(React.Fragment, null, React.createElement(\"button\", {\n          type: \"button\",\n          onClick: closeModal,\n          className: \"upper-right button-underline\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, \"TIMES\"), restTimer.started && React.createElement(RestTimer, {\n          secondsRemaining: restTimer.seconds,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }))\n      });\n    },\n    className: \"upper-right button-underline\",\n    id: \"times-toggle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"TIMES\"), React.createElement(LiftLog, {\n    liftEditable: liftEditable,\n    setLiftEditable: setLiftEditable,\n    setEditSetModal: setEditSetModal,\n    toggleNewLiftModal: toggleNewLiftModal,\n    currentLiftIndex: currentLiftIndex,\n    setCurrentLiftIndex: setCurrentLiftIndex,\n    lifts: lifts,\n    setModal: setModal,\n    closeModal: closeModal,\n    addSet: addSet,\n    startTimer: startIndividualTimer,\n    addLift: addLift,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }), maxSet && maxSet.rpe >= 6.5 && React.createElement(E1rmDisplay, {\n    set: maxSet,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    id: \"lift-history-button\",\n    className: \"arrow-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, \"Lift History\")), React.createElement(Modal, {\n    id: modal.id,\n    showModal: modal.child,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, modal.child), newLiftModal && React.createElement(Modal, {\n    toggleButton: false,\n    id: \"new-lift-modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(NewLift, {\n    toggleModal: toggleNewLiftModal,\n    addLift: addLift,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  })), editSetModal && React.createElement(Modal, {\n    toggleButton: false,\n    id: \"edit-set-modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, \"Edit A Set HERE\"), isBlurred && React.createElement(Backdrop, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }));\n};\n\nexport default Workout;","map":{"version":3,"sources":["/Users/Hadley/src/workout-logger/src/components/Workout.js"],"names":["React","useState","useEffect","Link","LiftLog","Modal","Backdrop","E1rmDisplay","RestTimer","useInterval","soundFile","Workout","props","isBlurred","setIsBlurred","id","child","modal","setModal","editSetModal","setEditSetModal","liftEditable","setLiftEditable","name","sets","weight","reps","rpe","lifts","setLifts","currentLiftIndex","setCurrentLiftIndex","decrement","started","finished","seconds","timers","setTimers","map","timer","Object","assign","startIndividualTimer","timerName","newSeconds","closeModal","toggleNewLiftModal","setNewLiftModal","newLiftModal","addSet","newWeight","newReps","newRpe","newSet","lift","index","addLift","newLift","maxSet","length","reduce","a","b","restTimer","find","sound","Audio","src","play"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport LiftLog from './LiftLog';\nimport Modal from './Modal';\nimport Backdrop from './Backdrop';\nimport E1rmDisplay from './E1rmDisplay';\nimport RestTimer from './RestTimer';\nimport useInterval from '../utils/useInterval';\nimport soundFile from '../assets/audio/bell.wav';\nimport './Workout.scss';\n\nconst Workout = props => {\n  const [isBlurred, setIsBlurred] = useState(false);\n  const [modal, setModal] = useState({ id: null, child: null });\n  const [editSetModal, setEditSetModal] = useState(false);\n  const [liftEditable, setLiftEditable] = useState(false);\n  const [lifts, setLifts] = useState([\n    {\n      name: 'deadlift',\n      sets: [\n        { weight: 230, reps: 5, rpe: 6 },\n        { weight: 245, reps: 5, rpe: 7 },\n        { weight: 255, reps: 5, rpe: 8 },\n        { weight: 255, reps: 5, rpe: 8 }\n      ]\n    },\n    {\n      name: 'squat',\n      sets: [\n        { weight: 230, reps: 5, rpe: 6 },\n        { weight: 245, reps: 5, rpe: 7 },\n        { weight: 255, reps: 5, rpe: 8 },\n        { weight: 255, reps: 5, rpe: 8 }\n      ]\n    },\n    {\n      name: 'bench press',\n      sets: [\n        { weight: 100, reps: 7, rpe: 6 },\n        { weight: 115, reps: 7, rpe: 7 },\n        { weight: 125, reps: 7, rpe: 8 },\n        { weight: 125, reps: 7, rpe: 8 },\n        { weight: 125, reps: 7, rpe: 8 }\n      ]\n    }\n  ]);\n  const [currentLiftIndex, setCurrentLiftIndex] = useState(0);\n  const [timers, setTimers] = useState([\n    {\n      name: 'rest',\n      decrement: true,\n      started: false,\n      finished: false,\n      seconds: 0\n    }\n  ]);\n\n  //update times every second\n  useInterval(() => {\n    setTimers(\n      timers.map(timer => {\n        if (timer.started) {\n          if (timer.decrement && timer.seconds > 0) {\n            return Object.assign(timer, { seconds: timer.seconds - 1 });\n          } else if (timer.decrement) {\n            return Object.assign(timer, { finished: true });\n          } else if (!timer.decrement) {\n            return Object.assign(timer, { seconds: timer.seconds + 1 });\n          } else {\n            return timer;\n          }\n        } else {\n          return timer;\n        }\n      })\n    );\n  }, 1000);\n\n  function startIndividualTimer(timerName, newSeconds) {\n    setTimers(\n      timers.map(timer => {\n        if (timer.name === timerName) {\n          return Object.assign(timer, {\n            seconds: newSeconds,\n            started: true,\n            finished: false\n          });\n        } else {\n          return timer;\n        }\n      })\n    );\n  }\n\n  function closeModal() {\n    setModal({ id: null, child: null });\n  }\n\n  function toggleNewLiftModal() {\n    setNewLiftModal(!newLiftModal);\n    setIsBlurred(!isBlurred);\n  }\n\n  function addSet(newWeight, newReps, newRpe) {\n    const newSet = {\n      weight: newWeight,\n      reps: newReps,\n      rpe: newRpe\n    };\n\n    setLifts(\n      lifts.map((lift, index) => {\n        if (index === currentLiftIndex) {\n          lift.sets = [...lift.sets, newSet];\n        }\n        return lift;\n      })\n    );\n  }\n\n  function addLift(newLift) {\n    setLifts([{ name: newLift, sets: [] }, ...lifts]);\n  }\n\n  const maxSet = lifts[currentLiftIndex].sets.length\n    ? lifts[currentLiftIndex].sets.reduce((a, b) => {\n        return a.weight >= b.weight ? a : b;\n      })\n    : null;\n\n  const restTimer = timers.find(timer => timer.name === 'rest');\n\n  // Play sound when rest finishes\n  useEffect(() => {\n    if (restTimer.finished) {\n      const sound = new Audio();\n      sound.src = soundFile;\n      sound.play();\n    }\n  }, [restTimer.finished]);\n\n  useEffect(() => {\n    if (editSetModal) {\n      setIsBlurred(true);\n    } else {\n      setIsBlurred(false);\n    }\n  }, [editSetModal]);\n\n  useEffect(() => {\n    if (modal.child) {\n      setIsBlurred(true);\n    } else {\n      setIsBlurred(false);\n    }\n  }, [modal.child]);\n\n  return (\n    <>\n      <div id=\"workout-screen\" className={isBlurred ? 'blurred' : ''}>\n        <Link to=\"/\" className=\"upper-left\">\n          <button type=\"button\" className=\"arrow-button\">\n            &larr;\n          </button>\n        </Link>\n        {restTimer.started && !restTimer.finished && (\n          <RestTimer secondsRemaining={restTimer.seconds} />\n        )}\n        {restTimer.finished && (\n          <div className=\"rest-timer\" id=\"rest-finished\">\n            <b>REST FINISHED!</b>\n          </div>\n        )}\n        <button\n          type=\"button\"\n          onClick={() => {\n            setModal({\n              id: 'times-modal',\n              child: (\n                <>\n                  <button\n                    type=\"button\"\n                    onClick={closeModal}\n                    className=\"upper-right button-underline\"\n                  >\n                    TIMES\n                  </button>\n                  {restTimer.started && (\n                    <RestTimer secondsRemaining={restTimer.seconds} />\n                  )}\n                </>\n              )\n            });\n          }}\n          className=\"upper-right button-underline\"\n          id=\"times-toggle\"\n        >\n          TIMES\n        </button>\n        <LiftLog\n          liftEditable={liftEditable}\n          setLiftEditable={setLiftEditable}\n          setEditSetModal={setEditSetModal}\n          toggleNewLiftModal={toggleNewLiftModal}\n          currentLiftIndex={currentLiftIndex}\n          setCurrentLiftIndex={setCurrentLiftIndex}\n          lifts={lifts}\n          setModal={setModal}\n          closeModal={closeModal}\n          addSet={addSet}\n          startTimer={startIndividualTimer}\n          addLift={addLift}\n        />\n        {maxSet && maxSet.rpe >= 6.5 && <E1rmDisplay set={maxSet} />}\n        <button type=\"button\" id=\"lift-history-button\" className=\"arrow-button\">\n          Lift History\n        </button>\n      </div>\n      <Modal id={modal.id} showModal={modal.child}>\n        {modal.child}\n      </Modal>\n      {newLiftModal && (\n        <Modal toggleButton={false} id=\"new-lift-modal\">\n          <NewLift toggleModal={toggleNewLiftModal} addLift={addLift} />\n        </Modal>\n      )}\n      {editSetModal && (\n        <Modal toggleButton={false} id=\"edit-set-modal\">\n          Edit A Set HERE\n        </Modal>\n      )}\n      {isBlurred && <Backdrop />}\n    </>\n  );\n};\n\nexport default Workout;\n"]},"metadata":{},"sourceType":"module"}