{"ast":null,"code":"import _slicedToArray from \"/Users/Hadley/src/workout-logger/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Hadley/src/workout-logger/client/src/components/MeasurementForm.js\";\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { measurementHistoryActions } from '../redux/slices/measurementHistory';\nimport './MeasurementForm.scss';\n\nconst MeasurementForm = props => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        measurement = _useState2[0],\n        setMeasurement = _useState2[1];\n\n  const dispatch = useDispatch();\n\n  function onSubmit(event) {\n    event.preventDefault();\n    props.closeModal();\n    dispatch(measurementHistoryActions.addOrUpdateMeasurement(undefined, props.type, measurement));\n  }\n\n  return React.createElement(\"form\", {\n    id: \"measurement-form\",\n    className: \"form-one\",\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"measurement-input\",\n    className: \"measurement-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, props.type, \":\"), React.createElement(\"input\", {\n    id: \"measurement-input\",\n    type: \"number\",\n    required: true,\n    onChange: event => setMeasurement(Number(event.target.value)),\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"form-button measurement-form-button\",\n    onClick: props.closeModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"CANCEL\"), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"form-button measurement-form-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"ENTER\"));\n};\n\nexport default MeasurementForm;","map":{"version":3,"sources":["/Users/Hadley/src/workout-logger/client/src/components/MeasurementForm.js"],"names":["React","useState","useDispatch","measurementHistoryActions","MeasurementForm","props","measurement","setMeasurement","dispatch","onSubmit","event","preventDefault","closeModal","addOrUpdateMeasurement","undefined","type","Number","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,yBAAT,QAA0C,oCAA1C;AACA,OAAO,wBAAP;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAAA,oBACOJ,QAAQ,CAAC,IAAD,CADf;AAAA;AAAA,QACxBK,WADwB;AAAA,QACXC,cADW;;AAE/B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AACA,WAASO,QAAT,CAAkBC,KAAlB,EAAyB;AACvBA,IAAAA,KAAK,CAACC,cAAN;AACAN,IAAAA,KAAK,CAACO,UAAN;AACAJ,IAAAA,QAAQ,CACNL,yBAAyB,CAACU,sBAA1B,CACEC,SADF,EAEET,KAAK,CAACU,IAFR,EAGET,WAHF,CADM,CAAR;AAOD;;AAED,SACE;AAAM,IAAA,EAAE,EAAC,kBAAT;AAA4B,IAAA,SAAS,EAAC,UAAtC;AAAiD,IAAA,QAAQ,EAAEG,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,mBAAf;AAAmC,IAAA,SAAS,EAAC,wBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,CAACU,IADT,MADF,EAIE;AACE,IAAA,EAAE,EAAC,mBADL;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,QAAQ,EAAE,IAHZ;AAIE,IAAA,QAAQ,EAAEL,KAAK,IAAIH,cAAc,CAACS,MAAM,CAACN,KAAK,CAACO,MAAN,CAAaC,KAAd,CAAP,CAJnC;AAKE,IAAA,SAAS,MALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAWE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,qCAFZ;AAGE,IAAA,OAAO,EAAEb,KAAK,CAACO,UAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,EAkBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,qCAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAlBF,CADF;AAwBD,CAvCD;;AAyCA,eAAeR,eAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { measurementHistoryActions } from '../redux/slices/measurementHistory';\nimport './MeasurementForm.scss';\n\nconst MeasurementForm = props => {\n  const [measurement, setMeasurement] = useState(null);\n  const dispatch = useDispatch();\n  function onSubmit(event) {\n    event.preventDefault();\n    props.closeModal();\n    dispatch(\n      measurementHistoryActions.addOrUpdateMeasurement(\n        undefined,\n        props.type,\n        measurement\n      )\n    );\n  }\n\n  return (\n    <form id=\"measurement-form\" className=\"form-one\" onSubmit={onSubmit}>\n      <label htmlFor=\"measurement-input\" className=\"measurement-form-label\">\n        {props.type}:\n      </label>\n      <input\n        id=\"measurement-input\"\n        type=\"number\"\n        required={true}\n        onChange={event => setMeasurement(Number(event.target.value))}\n        autoFocus\n      />\n      <button\n        type=\"button\"\n        className=\"form-button measurement-form-button\"\n        onClick={props.closeModal}\n      >\n        CANCEL\n      </button>\n      <button type=\"submit\" className=\"form-button measurement-form-button\">\n        ENTER\n      </button>\n    </form>\n  );\n};\n\nexport default MeasurementForm;\n"]},"metadata":{},"sourceType":"module"}