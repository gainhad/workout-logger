{"ast":null,"code":"var _jsxFileName = \"/Users/Hadley/src/workout-logger/src/components/SetForm.js\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getCurrentLiftIndex, getSetsForCurrentLift, currentWorkoutActions } from '../redux/slices/currentWorkout';\nimport './SetForm.scss';\n\nconst SetForm = ({\n  setIndex = undefined,\n  closeForm,\n  closeModal,\n  onSetSubmit = null\n}) => {\n  const currentLiftIndex = useSelector(state => getCurrentLiftIndex(state));\n  const dispatch = useDispatch();\n\n  const submitSet = set => dispatch(currentWorkoutActions.addOrUpdateSet(set));\n\n  const currentLiftSets = useSelector(state => getSetsForCurrentLift(state));\n  const currentSet = isNaN(setIndex) ? null : currentLiftSets[setIndex];\n\n  function onSubmit(event) {\n    event.preventDefault();\n    submitSet({\n      liftIndex: currentLiftIndex,\n      setIndex: setIndex,\n      set: {\n        weight: Number(event.target.weight.value),\n        reps: Number(event.target.reps.value),\n        rpe: Number(event.target.rpe.value)\n      }\n    });\n\n    if (onSetSubmit) {\n      onSetSubmit();\n    } else {\n      closeModal();\n    }\n  }\n\n  return React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    id: \"set-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"weight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"WEIGHT:\"), React.createElement(\"input\", {\n    name: \"weight\",\n    id: \"weight\",\n    type: \"number\",\n    required: true,\n    defaultValue: currentSet ? currentSet.weight : null,\n    placeholder: \"weight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    for: \"reps\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"REPS:\"), React.createElement(\"input\", {\n    name: \"reps\",\n    id: \"reps\",\n    type: \"number\",\n    required: true,\n    defaultValue: currentSet ? currentSet.reps : null,\n    placeholder: \"reps\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"RPE:\", React.createElement(\"input\", {\n    name: \"rpe\",\n    id: \"rpe\",\n    type: \"number\",\n    required: true,\n    defaultValue: currentSet ? currentSet.rpe : null,\n    placeholder: \"rpe\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"button\",\n    value: \"CANCEL\",\n    className: \"cancel-button\",\n    onClick: closeModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"ENTER\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }));\n};\n\nexport default SetForm;","map":{"version":3,"sources":["/Users/Hadley/src/workout-logger/src/components/SetForm.js"],"names":["React","useSelector","useDispatch","getCurrentLiftIndex","getSetsForCurrentLift","currentWorkoutActions","SetForm","setIndex","undefined","closeForm","closeModal","onSetSubmit","currentLiftIndex","state","dispatch","submitSet","set","addOrUpdateSet","currentLiftSets","currentSet","isNaN","onSubmit","event","preventDefault","liftIndex","weight","Number","target","value","reps","rpe"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  getCurrentLiftIndex,\n  getSetsForCurrentLift,\n  currentWorkoutActions\n} from '../redux/slices/currentWorkout';\nimport './SetForm.scss';\n\nconst SetForm = ({\n  setIndex = undefined,\n  closeForm,\n  closeModal,\n  onSetSubmit = null\n}) => {\n  const currentLiftIndex = useSelector(state => getCurrentLiftIndex(state));\n  const dispatch = useDispatch();\n  const submitSet = set => dispatch(currentWorkoutActions.addOrUpdateSet(set));\n  const currentLiftSets = useSelector(state => getSetsForCurrentLift(state));\n  const currentSet = isNaN(setIndex) ? null : currentLiftSets[setIndex];\n\n  function onSubmit(event) {\n    event.preventDefault();\n    submitSet({\n      liftIndex: currentLiftIndex,\n      setIndex: setIndex,\n      set: {\n        weight: Number(event.target.weight.value),\n        reps: Number(event.target.reps.value),\n        rpe: Number(event.target.rpe.value)\n      }\n    });\n    if (onSetSubmit) {\n      onSetSubmit();\n    } else {\n      closeModal();\n    }\n  }\n\n  return (\n    <form onSubmit={onSubmit} id=\"set-form\">\n      <label for=\"weight\">\n        WEIGHT:\n      </label>\n        <input\n          name=\"weight\"\n          id=\"weight\"\n          type=\"number\"\n          required={true}\n          defaultValue={currentSet ? currentSet.weight : null}\n          placeholder=\"weight\"\n        />\n      <label for=\"reps\">\n          REPS:\n      </label>\n        <input\n          name=\"reps\"\n          id=\"reps\"\n          type=\"number\"\n          required={true}\n          defaultValue={currentSet ? currentSet.reps : null}\n          placeholder=\"reps\"\n        />\n      <label>\n        RPE:\n        <input\n          name=\"rpe\"\n          id=\"rpe\"\n          type=\"number\"\n          required={true}\n          defaultValue={currentSet ? currentSet.rpe : null}\n          placeholder=\"rpe\"\n        />\n      </label>\n      <input\n        type=\"button\"\n        value=\"CANCEL\"\n        className=\"cancel-button\"\n        onClick={closeModal}\n      />\n      <input type=\"submit\" value=\"ENTER\" />\n    </form>\n  );\n};\n\nexport default SetForm;\n"]},"metadata":{},"sourceType":"module"}