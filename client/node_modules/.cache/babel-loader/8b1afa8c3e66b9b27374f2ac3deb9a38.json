{"ast":null,"code":"import _slicedToArray from \"/Users/Hadley/src/workout-logger/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Hadley/src/workout-logger/src/components/LiftLog.js\";\nimport React, { useState } from 'react';\nimport Modal from './Modal';\n\nconst LiftLog = () => {\n  const _useState = useState([{\n    name: 'deadlift',\n    sets: [{\n      weight: 90,\n      reps: 5,\n      rpe: 6\n    }, {\n      weight: 215,\n      reps: 5,\n      rpe: 7\n    }, {\n      weight: 225,\n      reps: 5,\n      rpe: 8\n    }, {\n      weight: 225,\n      reps: 5,\n      rpe: 10\n    }]\n  }, {\n    name: 'squat',\n    sets: [{\n      weight: 230,\n      reps: 5,\n      rpe: 6\n    }, {\n      weight: 245,\n      reps: 5,\n      rpe: 7\n    }, {\n      weight: 255,\n      reps: 5,\n      rpe: 8\n    }, {\n      weight: 255,\n      reps: 5,\n      rpe: 8\n    }]\n  }, {\n    name: 'bench press',\n    sets: [{\n      weight: 100,\n      reps: 7,\n      rpe: 6\n    }, {\n      weight: 115,\n      reps: 7,\n      rpe: 7\n    }, {\n      weight: 125,\n      reps: 7,\n      rpe: 8\n    }, {\n      weight: 125,\n      reps: 7,\n      rpe: 8\n    }]\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        lifts = _useState2[0],\n        setLifts = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        currentLiftIndex = _useState4[0],\n        setCurrentLiftIndex = _useState4[1];\n\n  function selectPreviousLift() {\n    if (currentLiftIndex < lifts.length - 1) {\n      setCurrentLiftIndex(currentLiftIndex + 1);\n    }\n  }\n\n  function selectNextLift() {\n    if (currentLiftIndex > 0) {\n      setCurrentLiftIndex(currentLiftIndex - 1);\n    }\n  }\n\n  return React.createElement(\"div\", {\n    id: \"lift-log\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(LiftSelector, {\n    atEnd: currentLiftIndex === lifts.length - 1,\n    atBeginning: currentLiftIndex === 0,\n    currentLift: lifts[currentLiftIndex],\n    selectPreviousLift: selectPreviousLift,\n    selectNextLift: selectNextLift,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(InfoDisplay, {\n    sets: lifts[currentLiftIndex].sets,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"arrow-button\",\n    id: \"add-set-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"\\uFF0B\"));\n};\n\nconst LiftSelector = props => {\n  return React.createElement(\"div\", {\n    id: \"lift-selector\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, !props.atEnd ? React.createElement(\"button\", {\n    type: \"button\",\n    onClick: props.selectPreviousLift,\n    className: \"arrow-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"\\u2190\") : null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, props.currentLift.name.toUpperCase()), props.atBeginning ? React.createElement(\"button\", {\n    type: \"button\",\n    className: \"arrow-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"\\uFF0B\") : React.createElement(\"button\", {\n    type: \"button\",\n    className: \"arrow-button\",\n    onClick: props.selectNextLift,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"\\u2192\"));\n};\n\nconst InfoDisplay = props => {\n  const setList = props.sets.map(set => React.createElement(\"div\", {\n    className: \"set\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"set-weight grid-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, set.weight), \" \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"lbs\")), React.createElement(\"div\", {\n    className: \"set-reps\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, set.reps), \" \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"reps\")), React.createElement(\"div\", {\n    className: \"set-rpe grid-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"@\"), \" \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, set.rpe))));\n  return React.createElement(\"div\", {\n    id: \"info-display\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, setList);\n};\n\nexport default LiftLog;","map":{"version":3,"sources":["/Users/Hadley/src/workout-logger/src/components/LiftLog.js"],"names":["React","useState","Modal","LiftLog","name","sets","weight","reps","rpe","lifts","setLifts","currentLiftIndex","setCurrentLiftIndex","selectPreviousLift","length","selectNextLift","LiftSelector","props","atEnd","currentLift","toUpperCase","atBeginning","InfoDisplay","setList","map","set"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Modal from './Modal';\n\nconst LiftLog = () => {\n  const [lifts, setLifts] = useState([\n    {\n      name: 'deadlift',\n      sets: [\n        { weight: 90, reps: 5, rpe: 6 },\n        { weight: 215, reps: 5, rpe: 7 },\n        { weight: 225, reps: 5, rpe: 8 },\n        { weight: 225, reps: 5, rpe: 10 }\n      ]\n    },\n    {\n      name: 'squat',\n      sets: [\n        { weight: 230, reps: 5, rpe: 6 },\n        { weight: 245, reps: 5, rpe: 7 },\n        { weight: 255, reps: 5, rpe: 8 },\n        { weight: 255, reps: 5, rpe: 8 }\n      ]\n    },\n    {\n      name: 'bench press',\n      sets: [\n        { weight: 100, reps: 7, rpe: 6 },\n        { weight: 115, reps: 7, rpe: 7 },\n        { weight: 125, reps: 7, rpe: 8 },\n        { weight: 125, reps: 7, rpe: 8 }\n      ]\n    }\n  ]);\n\n  const [currentLiftIndex, setCurrentLiftIndex] = useState(0);\n\n  function selectPreviousLift() {\n    if (currentLiftIndex < lifts.length - 1) {\n      setCurrentLiftIndex(currentLiftIndex + 1);\n    }\n  }\n\n  function selectNextLift() {\n    if (currentLiftIndex > 0) {\n      setCurrentLiftIndex(currentLiftIndex - 1);\n    }\n  }\n\n  return (\n    <div id=\"lift-log\">\n      <LiftSelector\n        atEnd={currentLiftIndex === lifts.length - 1}\n        atBeginning={currentLiftIndex === 0}\n        currentLift={lifts[currentLiftIndex]}\n        selectPreviousLift={selectPreviousLift}\n        selectNextLift={selectNextLift}\n      />\n      <InfoDisplay sets={lifts[currentLiftIndex].sets} />\n      <button type=\"button\" className=\"arrow-button\" id=\"add-set-button\">\n        &#65291;\n      </button>\n    </div>\n  );\n};\n\nconst LiftSelector = props => {\n  return (\n    <div id=\"lift-selector\">\n      {!props.atEnd ? (\n        <button\n          type=\"button\"\n          onClick={props.selectPreviousLift}\n          className=\"arrow-button\"\n        >\n          &larr;\n        </button>\n      ) : null}\n      <h2>{props.currentLift.name.toUpperCase()}</h2>\n      {props.atBeginning ? (\n        <button type=\"button\" className=\"arrow-button\">\n          &#65291;\n        </button>\n      ) : (\n        <button\n          type=\"button\"\n          className=\"arrow-button\"\n          onClick={props.selectNextLift}\n        >\n          &rarr;\n        </button>\n      )}\n    </div>\n  );\n};\n\nconst InfoDisplay = props => {\n  const setList = props.sets.map(set => (\n    <div className=\"set\">\n      <div className=\"set-weight grid-left\">\n        <b>{set.weight}</b> <span>lbs</span>\n      </div>\n      <div className=\"set-reps\">\n        <b>{set.reps}</b> <span>reps</span>\n      </div>\n      <div className=\"set-rpe grid-left\">\n        <span>@</span> <b>{set.rpe}</b>\n      </div>\n    </div>\n  ));\n  return <div id=\"info-display\">{setList}</div>;\n};\n\nexport default LiftLog;\n"]},"metadata":{},"sourceType":"module"}