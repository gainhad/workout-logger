{"ast":null,"code":"var _jsxFileName = \"/Users/Hadley/src/workout-logger/src/components/ViewDataMenu.js\";\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './ViewDataMenu.scss';\nimport { useSelector } from 'react-redux';\nimport { getLiftNamesAlphabetized } from '../redux/slices/liftHistory';\nimport { getMeasurementTypesAlphabetized } from '../redux/slices/measurementHistory';\n\nconst ViewDataMenu = () => {\n  const liftNames = useSelector(state => getLiftNamesAlphabetized(state));\n  const measurementNames = useSelector(state => getMeasurementTypesAlphabetized(state));\n  return React.createElement(\"div\", {\n    id: \"view-data-menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"arrow-button upper-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"\\u2190\")), React.createElement(\"div\", {\n    className: \"data-selection-menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"menu-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"LIFTS\"), React.createElement(\"ul\", {\n    id: \"lift-names\",\n    className: \"data-selection-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, liftNames.map((lift, key) => React.createElement(\"li\", {\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: {\n      pathname: \"/view/\".concat(lift),\n      state: {\n        type: 'lift',\n        unit: 'e1rm'\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, lift.toUpperCase())))))), React.createElement(\"div\", {\n    className: \"data-selection-menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"menu-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"MEASUREMENTS\"), React.createElement(\"ul\", {\n    id: \"measurement-names\",\n    className: \"data-selection-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, measurementNames.map((name, key) => React.createElement(\"li\", {\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => alert(name),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, name.toUpperCase()))))), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"button-one\",\n    id: \"graph-multiple-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"GRAPH MULTIPLE\")));\n};\n\nexport default ViewDataMenu;","map":{"version":3,"sources":["/Users/Hadley/src/workout-logger/src/components/ViewDataMenu.js"],"names":["React","useState","Link","useSelector","getLiftNamesAlphabetized","getMeasurementTypesAlphabetized","ViewDataMenu","liftNames","state","measurementNames","map","lift","key","pathname","type","unit","toUpperCase","name","alert"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,qBAAP;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,wBAAT,QAAyC,6BAAzC;AACA,SAASC,+BAAT,QAAgD,oCAAhD;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAMC,SAAS,GAAGJ,WAAW,CAACK,KAAK,IAAIJ,wBAAwB,CAACI,KAAD,CAAlC,CAA7B;AACA,QAAMC,gBAAgB,GAAGN,WAAW,CAACK,KAAK,IACxCH,+BAA+B,CAACG,KAAD,CADG,CAApC;AAGA,SACE;AAAK,IAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,yBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,EAME;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAI,IAAA,EAAE,EAAC,YAAP;AAAoB,IAAA,SAAS,EAAC,qBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,SAAS,CAACG,GAAV,CAAc,CAACC,IAAD,EAAOC,GAAP,KACb;AAAI,IAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAE;AACFC,MAAAA,QAAQ,kBAAWF,IAAX,CADN;AAEFH,MAAAA,KAAK,EAAE;AAAEM,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,IAAI,EAAE;AAAtB;AAFL,KADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBJ,IAAI,CAACK,WAAL,EAAvB,CANF,CADF,CADD,CADH,CAFF,CANF,EAuBE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAI,IAAA,EAAE,EAAC,mBAAP;AAA2B,IAAA,SAAS,EAAC,qBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,gBAAgB,CAACC,GAAjB,CAAqB,CAACO,IAAD,EAAOL,GAAP,KACpB;AAAI,IAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAMM,KAAK,CAACD,IAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,CAACD,WAAL,EADH,CADF,CADD,CADH,CAFF,CAvBF,EAmCE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,YAAhC;AAA6C,IAAA,EAAE,EAAC,uBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CAnCF,CADF;AAyCD,CA9CD;;AAgDA,eAAeV,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './ViewDataMenu.scss';\nimport { useSelector } from 'react-redux';\nimport { getLiftNamesAlphabetized } from '../redux/slices/liftHistory';\nimport { getMeasurementTypesAlphabetized } from '../redux/slices/measurementHistory';\n\nconst ViewDataMenu = () => {\n  const liftNames = useSelector(state => getLiftNamesAlphabetized(state));\n  const measurementNames = useSelector(state =>\n    getMeasurementTypesAlphabetized(state)\n  );\n  return (\n    <div id=\"view-data-menu\">\n      <Link to=\"/\">\n        <button type=\"button\" className=\"arrow-button upper-left\">\n          &larr;\n        </button>\n      </Link>\n      <div className=\"data-selection-menu\">\n        <h2 className=\"menu-header\">LIFTS</h2>\n        <ul id=\"lift-names\" className=\"data-selection-list\">\n          {liftNames.map((lift, key) => (\n            <li key={key}>\n              <Link\n                to={{\n                  pathname: `/view/${lift}`,\n                  state: { type: 'lift', unit: 'e1rm' }\n                }}\n              >\n                <button type=\"button\">{lift.toUpperCase()}</button>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"data-selection-menu\">\n        <h2 className=\"menu-header\">MEASUREMENTS</h2>\n        <ul id=\"measurement-names\" className=\"data-selection-list\">\n          {measurementNames.map((name, key) => (\n            <li key={key}>\n              <button type=\"button\" onClick={() => alert(name)}>\n                {name.toUpperCase()}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <button type=\"button\" className=\"button-one\" id=\"graph-multiple-button\">\n        <h2>GRAPH MULTIPLE</h2>\n      </button>\n    </div>\n  );\n};\n\nexport default ViewDataMenu;\n"]},"metadata":{},"sourceType":"module"}