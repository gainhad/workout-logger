{"ast":null,"code":"import _slicedToArray from \"/Users/Hadley/src/workout-logger/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Hadley/src/workout-logger/src/components/NewSet.js\";\nimport React, { useState } from 'react';\nimport './NewSet.scss';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { currentWorkoutActions } from '../redux/slices/currentWorkout';\nimport NewRestTimer from './NewRestTimer';\nimport SetForm from './SetForm';\n\nconst NewSet = props => {\n  const currentLiftIndex = useSelector(state => state.currentWorkout.currentLiftIndex);\n  const dispatch = useDispatch();\n\n  const addSet = set => dispatch(currentWorkoutActions.addSet(set));\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        setEntered = _useState2[0],\n        setSetEntered = _useState2[1];\n\n  function onSubmit(event) {\n    event.preventDefault();\n    setSetEntered(true);\n    addSet({\n      liftIndex: currentLiftIndex,\n      set: {\n        weight: Number(event.target.weight.value),\n        reps: Number(event.target.reps.value),\n        rpe: Number(event.target.rpe.value)\n      }\n    });\n  }\n\n  if (!setEntered) {\n    return React.createElement(SetForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(NewRestTimer, {\n      closeModal: props.closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n  }\n};\n\nexport default NewSet;","map":{"version":3,"sources":["/Users/Hadley/src/workout-logger/src/components/NewSet.js"],"names":["React","useState","useSelector","useDispatch","currentWorkoutActions","NewRestTimer","SetForm","NewSet","props","currentLiftIndex","state","currentWorkout","dispatch","addSet","set","setEntered","setSetEntered","onSubmit","event","preventDefault","liftIndex","weight","Number","target","value","reps","rpe","closeModal"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,eAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,qBAAT,QAAsC,gCAAtC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACtB,QAAMC,gBAAgB,GAAGP,WAAW,CAClCQ,KAAK,IAAIA,KAAK,CAACC,cAAN,CAAqBF,gBADI,CAApC;AAGA,QAAMG,QAAQ,GAAGT,WAAW,EAA5B;;AACA,QAAMU,MAAM,GAAGC,GAAG,IAAIF,QAAQ,CAACR,qBAAqB,CAACS,MAAtB,CAA6BC,GAA7B,CAAD,CAA9B;;AALsB,oBAMcb,QAAQ,CAAC,KAAD,CANtB;AAAA;AAAA,QAMfc,UANe;AAAA,QAMHC,aANG;;AAQtB,WAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvBA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAH,IAAAA,MAAM,CAAC;AACLO,MAAAA,SAAS,EAAEX,gBADN;AAELK,MAAAA,GAAG,EAAE;AACHO,QAAAA,MAAM,EAAEC,MAAM,CAACJ,KAAK,CAACK,MAAN,CAAaF,MAAb,CAAoBG,KAArB,CADX;AAEHC,QAAAA,IAAI,EAAEH,MAAM,CAACJ,KAAK,CAACK,MAAN,CAAaE,IAAb,CAAkBD,KAAnB,CAFT;AAGHE,QAAAA,GAAG,EAAEJ,MAAM,CAACJ,KAAK,CAACK,MAAN,CAAaG,GAAb,CAAiBF,KAAlB;AAHR;AAFA,KAAD,CAAN;AAQD;;AACD,MAAI,CAACT,UAAL,EAAiB;AACf,WACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAJD,MAIO;AACL,WAAO,oBAAC,YAAD;AAAc,MAAA,UAAU,EAAEP,KAAK,CAACmB,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AACF,CA3BD;;AA6BA,eAAepB,MAAf","sourcesContent":["import React, {useState} from 'react';\nimport './NewSet.scss';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { currentWorkoutActions } from '../redux/slices/currentWorkout';\nimport NewRestTimer from './NewRestTimer';\nimport SetForm from './SetForm';\n\nconst NewSet = props => {\n  const currentLiftIndex = useSelector(\n    state => state.currentWorkout.currentLiftIndex\n  );\n  const dispatch = useDispatch();\n  const addSet = set => dispatch(currentWorkoutActions.addSet(set));\n  const [setEntered, setSetEntered] = useState(false);\n\n  function onSubmit(event) {\n    event.preventDefault();\n    setSetEntered(true);\n    addSet({\n      liftIndex: currentLiftIndex,\n      set: {\n        weight: Number(event.target.weight.value),\n        reps: Number(event.target.reps.value),\n        rpe: Number(event.target.rpe.value)\n      }\n    });\n  }\n  if (!setEntered) {\n    return (\n      <SetForm />\n    );\n  } else {\n    return <NewRestTimer closeModal={props.closeModal} />;\n  }\n};\n\nexport default NewSet;\n"]},"metadata":{},"sourceType":"module"}