{"ast":null,"code":"var _jsxFileName = \"/Users/Hadley/src/workout-logger/src/components/Modal.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.scss';\n\nconst Modal = props => {\n  console.log(document.getElementById('App'));\n\n  if (props.isOpen) {\n    return ReactDOM.createPortal(React.createElement(\"div\", {\n      className: \"modal\",\n      id: props.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, props.toggleButton && React.createElement(\"button\", {\n      type: \"button\",\n      onClick: props.toggle,\n      id: \"close-modal-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"X\"), props.children), document.getElementById('App'));\n  } else {\n    return null;\n  }\n};\n\nModal.defaultProps = {\n  toggleButton: true\n};\nexport default Modal;","map":{"version":3,"sources":["/Users/Hadley/src/workout-logger/src/components/Modal.js"],"names":["React","ReactDOM","Modal","props","console","log","document","getElementById","isOpen","createPortal","id","toggleButton","toggle","children","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAO,cAAP;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAZ;;AACA,MAAIJ,KAAK,CAACK,MAAV,EAAkB;AAChB,WAAOP,QAAQ,CAACQ,YAAT,CACL;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,EAAE,EAAEN,KAAK,CAACO,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGP,KAAK,CAACQ,YAAN,IACC;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAER,KAAK,CAACS,MAArC;AAA6C,MAAA,EAAE,EAAC,oBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,EAMGT,KAAK,CAACU,QANT,CADK,EASLP,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CATK,CAAP;AAWD,GAZD,MAYO;AACL,WAAO,IAAP;AACD;AACF,CAjBD;;AAmBAL,KAAK,CAACY,YAAN,GAAqB;AACnBH,EAAAA,YAAY,EAAE;AADK,CAArB;AAIA,eAAeT,KAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Modal.scss';\n\nconst Modal = props => {\n  console.log(document.getElementById('App'));\n  if (props.isOpen) {\n    return ReactDOM.createPortal(\n      <div className=\"modal\" id={props.id}>\n        {props.toggleButton && (\n          <button type=\"button\" onClick={props.toggle} id=\"close-modal-button\">\n            X\n          </button>\n        )}\n        {props.children}\n      </div>,\n      document.getElementById('App')\n    );\n  } else {\n    return null;\n  }\n};\n\nModal.defaultProps = {\n  toggleButton: true\n};\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}