{"ast":null,"code":"import { createSlice } from 'redux-starter-kit';\nconst initialState = {\n  lifts: [{\n    name: 'SQUAT',\n    sets: [{\n      weight: 255,\n      reps: 10,\n      rpe: 6\n    }, {\n      weight: 287,\n      reps: 7,\n      rpe: 7\n    }]\n  }, {\n    name: 'DEADLIFT',\n    sets: []\n  }, {\n    name: 'BENCH PRESS',\n    sets: []\n  }],\n  currentLiftIndex: 0\n};\n\nfunction addLiftReducer(state, {\n  payload\n}) {\n  state.lifts.unshift({\n    name: payload.name,\n    sets: [],\n    estimatedOneRepMax: null\n  });\n}\n\nfunction deleteLiftReducer(state, {\n  payload\n}) {\n  state.lifts.splice(payload.index, 1);\n}\n\nfunction renameLiftReducer(state, {\n  payload\n}) {\n  state.lifts[payload.index].name = payload.name;\n}\n\nfunction addSetReducer(state, {\n  payload\n}) {\n  state.lifts[payload.liftIndex].sets.push(payload.set);\n}\n\nfunction deleteSetReducer(state, {\n  payload\n}) {\n  state.lifts[payload.liftIndex].sets.splice(payload.setIndex, 1);\n}\n\nfunction updateSetReducer(state, {\n  payload\n}) {\n  state.lifts[payload.liftIndex].sets[payload.setIndex] = payload.updatedSet;\n}\n\nfunction updateCurrentLiftIndexReducer(state, {\n  payload\n}) {\n  state.currentLiftIndex = payload.updatedIndex;\n}\n\nconst currentWorkout = createSlice({\n  slice: 'currentWorkout',\n  initialState: initialState,\n  reducers: {\n    addLift: addLiftReducer,\n    deleteLift: deleteLiftReducer,\n    renameLift: renameLiftReducer,\n    addSet: addSetReducer,\n    deleteSet: deleteSetReducer,\n    updateSet: updateSetReducer,\n    updateCurrentLiftIndex: updateCurrentLiftIndexReducer\n  }\n});\nconst actions = currentWorkout.actions,\n      reducer = currentWorkout.reducer;\nconst addLift = actions.addLift,\n      deleteLift = actions.deleteLift,\n      renameLift = actions.renameLift,\n      deleteSet = actions.deleteSet;\nexport { addLift, deleteLift, renameLift, deleteSet };\nexport { initialState };\nexport default reducer;","map":{"version":3,"sources":["/Users/Hadley/src/workout-logger/src/redux/slices/currentWorkout.js"],"names":["createSlice","initialState","lifts","name","sets","weight","reps","rpe","currentLiftIndex","addLiftReducer","state","payload","unshift","estimatedOneRepMax","deleteLiftReducer","splice","index","renameLiftReducer","addSetReducer","liftIndex","push","set","deleteSetReducer","setIndex","updateSetReducer","updatedSet","updateCurrentLiftIndexReducer","updatedIndex","currentWorkout","slice","reducers","addLift","deleteLift","renameLift","addSet","deleteSet","updateSet","updateCurrentLiftIndex","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from 'redux-starter-kit';\n\nconst initialState = {\n  lifts: [\n    {\n      name: 'SQUAT',\n      sets: [\n        { weight: 255, reps: 10, rpe: 6 },\n        { weight: 287, reps: 7, rpe: 7 }\n      ],\n    },\n    { name: 'DEADLIFT', sets: [] },\n    { name: 'BENCH PRESS', sets: [] }\n  ],\n  currentLiftIndex: 0\n};\n\nfunction addLiftReducer(state, { payload }) {\n  state.lifts.unshift({ name: payload.name, sets: [], estimatedOneRepMax: null });\n}\n\nfunction deleteLiftReducer(state, { payload }) {\n  state.lifts.splice(payload.index, 1);\n}\n\nfunction renameLiftReducer(state, { payload }) {\n  state.lifts[payload.index].name = payload.name;\n}\n\nfunction addSetReducer(state, { payload }) {\n  state.lifts[payload.liftIndex].sets.push(payload.set);\n}\n\nfunction deleteSetReducer(state, { payload }) {\n  state.lifts[payload.liftIndex].sets.splice(payload.setIndex, 1);\n}\n\nfunction updateSetReducer(state, { payload }) {\n state.lifts[payload.liftIndex].sets[payload.setIndex] = payload.updatedSet;\n}\n\nfunction updateCurrentLiftIndexReducer(state, { payload }) {\n  state.currentLiftIndex = payload.updatedIndex;\n}\n\nconst currentWorkout = createSlice({\n  slice: 'currentWorkout',\n  initialState: initialState,\n  reducers: {\n    addLift: addLiftReducer,\n    deleteLift: deleteLiftReducer,\n    renameLift: renameLiftReducer,\n    addSet: addSetReducer,\n    deleteSet: deleteSetReducer,\n    updateSet: updateSetReducer,\n    updateCurrentLiftIndex: updateCurrentLiftIndexReducer\n  }\n});\n\nconst { actions, reducer } = currentWorkout;\nexport const { addLift, deleteLift, renameLift, deleteSet } = actions;\nexport { initialState };\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}