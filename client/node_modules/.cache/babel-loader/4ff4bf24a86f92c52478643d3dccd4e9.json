{"ast":null,"code":"import _slicedToArray from \"/Users/Hadley/src/workout-logger/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Hadley/src/workout-logger/src/components/NewSet.js\";\nimport React, { useState } from 'react';\nimport './NewSet.scss';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { currentWorkoutActions } from '../redux/slices/currentWorkout';\nimport NewRestTimer from './NewRestTimer';\nimport SetForm from './SetForm';\n\nconst NewSet = props => {\n  const currentLiftIndex = useSelector(state => state.currentWorkout.currentLiftIndex);\n  const dispatch = useDispatch();\n\n  const addSet = set => dispatch(currentWorkoutActions.addSet(set));\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        setEntered = _useState2[0],\n        setSetEntered = _useState2[1];\n\n  if (!setEntered) {\n    return React.createElement(SetForm, {\n      closeForm: props.closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(NewRestTimer, {\n      closeModal: props.closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    });\n  }\n};\n\nexport default NewSet;","map":{"version":3,"sources":["/Users/Hadley/src/workout-logger/src/components/NewSet.js"],"names":["React","useState","useSelector","useDispatch","currentWorkoutActions","NewRestTimer","SetForm","NewSet","props","currentLiftIndex","state","currentWorkout","dispatch","addSet","set","setEntered","setSetEntered","closeModal"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,eAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,qBAAT,QAAsC,gCAAtC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACtB,QAAMC,gBAAgB,GAAGP,WAAW,CAClCQ,KAAK,IAAIA,KAAK,CAACC,cAAN,CAAqBF,gBADI,CAApC;AAGA,QAAMG,QAAQ,GAAGT,WAAW,EAA5B;;AACA,QAAMU,MAAM,GAAGC,GAAG,IAAIF,QAAQ,CAACR,qBAAqB,CAACS,MAAtB,CAA6BC,GAA7B,CAAD,CAA9B;;AALsB,oBAMcb,QAAQ,CAAC,KAAD,CANtB;AAAA;AAAA,QAMfc,UANe;AAAA,QAMHC,aANG;;AAQtB,MAAI,CAACD,UAAL,EAAiB;AACf,WACE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAEP,KAAK,CAACS,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAJD,MAIO;AACL,WAAO,oBAAC,YAAD;AAAc,MAAA,UAAU,EAAET,KAAK,CAACS,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AACF,CAfD;;AAiBA,eAAeV,MAAf","sourcesContent":["import React, {useState} from 'react';\nimport './NewSet.scss';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { currentWorkoutActions } from '../redux/slices/currentWorkout';\nimport NewRestTimer from './NewRestTimer';\nimport SetForm from './SetForm';\n\nconst NewSet = props => {\n  const currentLiftIndex = useSelector(\n    state => state.currentWorkout.currentLiftIndex\n  );\n  const dispatch = useDispatch();\n  const addSet = set => dispatch(currentWorkoutActions.addSet(set));\n  const [setEntered, setSetEntered] = useState(false);\n\n  if (!setEntered) {\n    return (\n      <SetForm closeForm={props.closeModal}/>\n    );\n  } else {\n    return <NewRestTimer closeModal={props.closeModal} />;\n  }\n};\n\nexport default NewSet;\n"]},"metadata":{},"sourceType":"module"}