{"ast":null,"code":"const percentageTable = [{\n  rpe: 6.5,\n  percentages: [.878, .85, .824, .799, .774, .751, .723, .694, .667, .64]\n}, {\n  rpe: 7,\n  percentages: [.892, .863, .837, .811, .786, .762, .739, .707, .680, .653]\n}, {\n  rpe: 7.5,\n  percentages: [.907, .878, .850, .824, .799, .774, .751, .723, .694, .667]\n}, {\n  rpe: 8,\n  percentages: [.922, .892, .863, .837, .811, .786, .762, .739, .707, .680]\n}, {\n  rpe: 8.5,\n  percentages: [.939, .907, .878, .850, .824, .799, .774, .751, .723, .694]\n}, {\n  rpe: 9,\n  percentages: [.955, .922, .892, .863, .837, .811, .786, .762, .739, .707]\n}, {\n  rpe: 9.5,\n  percentages: [.978, .939, .907, .878, .850, .824, .799, .774, .751, .723]\n}, {\n  rpe: 10,\n  percentages: [.100, .955, .922, .892, .863, .837, .811, .786, .762, .739]\n}];\n\nfunction calculateE1RM(weight, reps, rpe) {\n  if (rpe < 6.5 || rpe > 10) {\n    throw new RangeError(\"RPE must be between 6.5 and 10 for E1RM calculation\");\n  } else if (rpe % .5 !== 0) {\n    throw new Error(\"RPE must be a whole or half number\");\n  } else if (reps > 12) {\n    throw new RangeError(\"Reps must be less than 12 for an E1RM calculation\");\n  }\n\n  console.log(percentageTable.find(e => e.rpe === rpe).percentages[reps]);\n  return 200; //return weight / percentageTable[rpe].percentages[reps];\n}\n\nexport { calculateE1RM };","map":{"version":3,"sources":["/Users/Hadley/src/workout-logger/src/utils/calculations.js"],"names":["percentageTable","rpe","percentages","calculateE1RM","weight","reps","RangeError","Error","console","log","find","e"],"mappings":"AAAA,MAAMA,eAAe,GAAG,CACtB;AACEC,EAAAA,GAAG,EAAE,GADP;AAEEC,EAAAA,WAAW,EAAE,CAAC,IAAD,EAAO,GAAP,EAAY,IAAZ,EAAkB,IAAlB,EAAwB,IAAxB,EAA8B,IAA9B,EAAoC,IAApC,EAA0C,IAA1C,EAAgD,IAAhD,EAAsD,GAAtD;AAFf,CADsB,EAKtB;AACED,EAAAA,GAAG,EAAE,CADP;AAEEC,EAAAA,WAAW,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD;AAFf,CALsB,EAStB;AACED,EAAAA,GAAG,EAAE,GADP;AAEEC,EAAAA,WAAW,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD;AAFf,CATsB,EAatB;AACED,EAAAA,GAAG,EAAE,CADP;AAEEC,EAAAA,WAAW,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD;AAFf,CAbsB,EAiBtB;AACED,EAAAA,GAAG,EAAE,GADP;AAEEC,EAAAA,WAAW,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD;AAFf,CAjBsB,EAqBtB;AACED,EAAAA,GAAG,EAAE,CADP;AAEEC,EAAAA,WAAW,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD;AAFf,CArBsB,EAyBtB;AACED,EAAAA,GAAG,EAAE,GADP;AAEEC,EAAAA,WAAW,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD;AAFf,CAzBsB,EA6BtB;AACED,EAAAA,GAAG,EAAE,EADP;AAEEC,EAAAA,WAAW,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD;AAFf,CA7BsB,CAAxB;;AAmCA,SAASC,aAAT,CAAuBC,MAAvB,EAA+BC,IAA/B,EAAqCJ,GAArC,EAA0C;AACxC,MAAIA,GAAG,GAAG,GAAN,IAAaA,GAAG,GAAG,EAAvB,EAA2B;AACzB,UAAM,IAAIK,UAAJ,CAAe,qDAAf,CAAN;AACD,GAFD,MAEO,IAAIL,GAAG,GAAG,EAAN,KAAa,CAAjB,EAAoB;AACvB,UAAM,IAAIM,KAAJ,CAAU,oCAAV,CAAN;AACH,GAFM,MAEA,IAAIF,IAAI,GAAG,EAAX,EAAe;AACpB,UAAM,IAAIC,UAAJ,CAAe,mDAAf,CAAN;AACD;;AACDE,EAAAA,OAAO,CAACC,GAAR,CAAYT,eAAe,CAACU,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACV,GAAF,KAAUA,GAApC,EAAyCC,WAAzC,CAAqDG,IAArD,CAAZ;AACA,SAAO,GAAP,CATwC,CAUxC;AACD;;AAED,SAASF,aAAT","sourcesContent":["const percentageTable = [\n  {\n    rpe: 6.5,\n    percentages: [.878, .85, .824, .799, .774, .751, .723, .694, .667, .64]\n  },\n  {\n    rpe: 7,\n    percentages: [.892, .863, .837, .811, .786, .762, .739, .707, .680, .653]\n  },\n  {\n    rpe: 7.5,\n    percentages: [.907, .878, .850, .824, .799, .774, .751, .723, .694, .667]\n  },\n  {\n    rpe: 8,\n    percentages: [.922, .892, .863, .837, .811, .786, .762, .739, .707, .680]\n  },\n  {\n    rpe: 8.5,\n    percentages: [.939, .907, .878, .850, .824, .799, .774, .751, .723, .694]\n  },\n  {\n    rpe: 9,\n    percentages: [.955, .922, .892, .863, .837, .811, .786, .762, .739, .707]\n  },\n  {\n    rpe: 9.5,\n    percentages: [.978, .939, .907, .878, .850, .824, .799, .774, .751, .723]\n  },\n  {\n    rpe: 10,\n    percentages: [.100, .955, .922, .892, .863, .837, .811, .786, .762, .739]\n  }\n];\n\nfunction calculateE1RM(weight, reps, rpe) {\n  if (rpe < 6.5 || rpe > 10) {\n    throw new RangeError(\"RPE must be between 6.5 and 10 for E1RM calculation\");\n  } else if (rpe % .5 !== 0) {\n      throw new Error(\"RPE must be a whole or half number\");\n  } else if (reps > 12) {\n    throw new RangeError(\"Reps must be less than 12 for an E1RM calculation\");\n  }\n  console.log(percentageTable.find(e => e.rpe === rpe).percentages[reps]);\n  return 200;\n  //return weight / percentageTable[rpe].percentages[reps];\n}\n\nexport { calculateE1RM };\n"]},"metadata":{},"sourceType":"module"}