{"ast":null,"code":"import _slicedToArray from \"/Users/Hadley/src/workout-logger/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Hadley/src/workout-logger/src/components/Workout.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport LiftLog from './LiftLog';\nimport Modal from './Modal';\nimport Backdrop from './Backdrop';\nimport NewSet from './NewSet';\nimport E1rmDisplay from './E1rmDisplay';\nimport RestTimer from './RestTimer';\nimport useInterval from '../utils/useInterval';\nimport NewRestTimer from './NewRestTimer';\nimport NewLift from './NewLift';\nimport EditLift from './EditLift';\nimport TimesDisplay from './TimesDisplay';\nimport './Workout.scss';\n\nconst Workout = props => {\n  //Keep!\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        timesDisplayModalOpen = _useState2[0],\n        setTimesDisplayModalOpen = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isBlurred = _useState4[0],\n        setIsBlurred = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        newSetModal = _useState6[0],\n        setNewSetModal = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        editLiftModal = _useState8[0],\n        setEditLiftModal = _useState8[1];\n\n  const _useState9 = useState({\n    display: false,\n    index: 0\n  }),\n        _useState10 = _slicedToArray(_useState9, 2),\n        editSetModal = _useState10[0],\n        setEditSetModal = _useState10[1];\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        newLiftModal = _useState12[0],\n        setNewLiftModal = _useState12[1];\n\n  const _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        timesModal = _useState14[0],\n        setTimesModal = _useState14[1];\n\n  const _useState15 = useState(false),\n        _useState16 = _slicedToArray(_useState15, 2),\n        restTimerModal = _useState16[0],\n        setRestTimerModal = _useState16[1];\n\n  function closeSetModal() {\n    setNewSetModal(false);\n  }\n\n  function toggleSetModal() {\n    if (newSetModal) {\n      setNewSetModal(false);\n      setRestTimerModal(true);\n    } else {\n      setNewSetModal(true);\n    }\n  }\n\n  function toggleTimesModal() {\n    setTimesModal(!timesModal);\n  }\n\n  function toggleRestTimerModal() {\n    setRestTimerModal(!restTimerModal);\n  }\n\n  function toggleNewLiftModal() {\n    setNewLiftModal(!newLiftModal);\n  }\n\n  function toggleEditLiftNameModal() {\n    setNewLiftModal(true);\n  }\n\n  function toggleEditLiftModal() {\n    setEditLiftModal(!editLiftModal);\n  }\n\n  const test = isBlurred ? 'blurred' : '';\n  useEffect(() => {\n    if (newSetModal || newLiftModal || restTimerModal || editLiftModal || timesModal) {\n      setIsBlurred(true);\n    } else {\n      setIsBlurred(false);\n    }\n  }, [newSetModal, newLiftModal, restTimerModal, editLiftModal, timesModal]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"workout-screen\",\n    className: test,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    className: \"upper-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"arrow-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"\\u2190\")), React.createElement(RestTimer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: toggleTimesModal,\n    className: \"upper-right button-underline\",\n    id: \"times-toggle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"TIMES\"), React.createElement(LiftLog, {\n    toggleSetModal: toggleSetModal,\n    toggleNewLiftModal: toggleNewLiftModal,\n    setEditSetModal: setEditSetModal,\n    toggleEditLiftModal: toggleEditLiftModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(E1rmDisplay, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    id: \"lift-history-button\",\n    className: \"arrow-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Lift History\")), newSetModal && React.createElement(Modal, {\n    toggleButton: false,\n    id: \"set-modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(NewSet, {\n    closeModal: closeSetModal,\n    toggleModal: toggleSetModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })), React.createElement(Modal, {\n    isOpen: timesDisplayModalOpen,\n    registerClose: () => setTimesDisplayModalOpen(false),\n    id: \"times-modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    onClick: toggleTimesModal,\n    className: \"upper-right button-underline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"TIMES\"), React.createElement(TimesDisplay, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  })), restTimerModal && React.createElement(Modal, {\n    toggleButton: false,\n    id: \"new-rest-timer-modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(NewRestTimer, {\n    toggleModal: toggleRestTimerModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  })), newLiftModal && React.createElement(Modal, {\n    toggleButton: false,\n    id: \"new-lift-modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(NewLift, {\n    toggleModal: toggleNewLiftModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  })), editSetModal.display && React.createElement(Modal, {\n    toggleButton: false,\n    id: \"edit-lift-modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"editing: \", editSetModal.index), editLiftModal && React.createElement(Modal, {\n    toggleButton: false,\n    id: \"edit-lift-modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(EditLift, {\n    toggleModal: toggleEditLiftModal,\n    changeLiftName: toggleEditLiftNameModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })), isBlurred && React.createElement(Backdrop, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }));\n};\n\nexport default Workout;","map":{"version":3,"sources":["/Users/Hadley/src/workout-logger/src/components/Workout.js"],"names":["React","useState","useEffect","Link","LiftLog","Modal","Backdrop","NewSet","E1rmDisplay","RestTimer","useInterval","NewRestTimer","NewLift","EditLift","TimesDisplay","Workout","props","timesDisplayModalOpen","setTimesDisplayModalOpen","isBlurred","setIsBlurred","newSetModal","setNewSetModal","editLiftModal","setEditLiftModal","display","index","editSetModal","setEditSetModal","newLiftModal","setNewLiftModal","timesModal","setTimesModal","restTimerModal","setRestTimerModal","closeSetModal","toggleSetModal","toggleTimesModal","toggleRestTimerModal","toggleNewLiftModal","toggleEditLiftNameModal","toggleEditLiftModal","test"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport LiftLog from './LiftLog';\nimport Modal from './Modal';\nimport Backdrop from './Backdrop';\nimport NewSet from './NewSet';\nimport E1rmDisplay from './E1rmDisplay';\nimport RestTimer from './RestTimer';\nimport useInterval from '../utils/useInterval';\nimport NewRestTimer from './NewRestTimer';\nimport NewLift from './NewLift';\nimport EditLift from './EditLift';\nimport TimesDisplay from './TimesDisplay';\nimport './Workout.scss';\n\nconst Workout = props => {\n  \n  //Keep!\n  const [timesDisplayModalOpen, setTimesDisplayModalOpen] = useState(false);\n\n\n  const [isBlurred, setIsBlurred] = useState(false);\n  const [newSetModal, setNewSetModal] = useState(false);\n  const [editLiftModal, setEditLiftModal] = useState(false);\n  const [editSetModal, setEditSetModal] = useState({\n    display: false,\n    index: 0\n  });\n  const [newLiftModal, setNewLiftModal] = useState(false);\n  const [timesModal, setTimesModal] = useState(false);\n  const [restTimerModal, setRestTimerModal] = useState(false);\n\n  function closeSetModal() {\n    setNewSetModal(false);\n  }\n\n  function toggleSetModal() {\n    if (newSetModal) {\n      setNewSetModal(false);\n      setRestTimerModal(true);\n    } else {\n      setNewSetModal(true);\n    }\n  }\n\n  function toggleTimesModal() {\n    setTimesModal(!timesModal);\n  }\n\n  function toggleRestTimerModal() {\n    setRestTimerModal(!restTimerModal);\n  }\n\n  function toggleNewLiftModal() {\n    setNewLiftModal(!newLiftModal);\n  }\n\n  function toggleEditLiftNameModal() {\n    setNewLiftModal(true);\n  }\n\n  function toggleEditLiftModal() {\n    setEditLiftModal(!editLiftModal);\n  }\n\n  const test = isBlurred ? 'blurred' : '';\n\n  useEffect(() => {\n    if (\n      newSetModal ||\n      newLiftModal ||\n      restTimerModal ||\n      editLiftModal ||\n      timesModal\n    ) {\n      setIsBlurred(true);\n    } else {\n      setIsBlurred(false);\n    }\n  }, [newSetModal, newLiftModal, restTimerModal, editLiftModal, timesModal]);\n\n  return (\n    <React.Fragment>\n      <div id=\"workout-screen\" className={test}>\n        <Link to=\"/\" className=\"upper-left\">\n          <button type=\"button\" className=\"arrow-button\">\n            &larr;\n          </button>\n        </Link>\n        <RestTimer />\n        <button\n          type=\"button\"\n          onClick={toggleTimesModal}\n          className=\"upper-right button-underline\"\n          id=\"times-toggle\"\n        >\n          TIMES\n        </button>\n        <LiftLog\n          toggleSetModal={toggleSetModal}\n          toggleNewLiftModal={toggleNewLiftModal}\n          setEditSetModal={setEditSetModal}\n          toggleEditLiftModal={toggleEditLiftModal}\n        />\n        <E1rmDisplay />\n        <button type=\"button\" id=\"lift-history-button\" className=\"arrow-button\">\n          Lift History\n        </button>\n      </div>\n      {newSetModal && (\n        <Modal toggleButton={false} id=\"set-modal\">\n          <NewSet closeModal={closeSetModal} toggleModal={toggleSetModal} />\n        </Modal>\n      )}\n        <Modal isOpen={timesDisplayModalOpen} registerClose={()=>setTimesDisplayModalOpen(false)} id=\"times-modal\">\n          <button\n            type=\"button\"\n            onClick={toggleTimesModal}\n            className=\"upper-right button-underline\"\n          >\n            TIMES\n          </button>\n          <TimesDisplay />\n        </Modal>\n      {restTimerModal && (\n        <Modal toggleButton={false} id=\"new-rest-timer-modal\">\n          <NewRestTimer\n            toggleModal={toggleRestTimerModal}\n          />\n        </Modal>\n      )}\n      {newLiftModal && (\n        <Modal toggleButton={false} id=\"new-lift-modal\">\n          <NewLift toggleModal={toggleNewLiftModal} />\n        </Modal>\n      )}\n      {editSetModal.display && (\n        <Modal toggleButton={false} id=\"edit-lift-modal\">\n          editing: {editSetModal.index}\n        </Modal>\n      )}\n      {editLiftModal && (\n        <Modal toggleButton={false} id=\"edit-lift-modal\">\n          <EditLift\n            toggleModal={toggleEditLiftModal}\n            changeLiftName={toggleEditLiftNameModal}\n          />\n        </Modal>\n      )}\n      {isBlurred && <Backdrop />}\n    </React.Fragment>\n  );\n};\n\nexport default Workout;\n"]},"metadata":{},"sourceType":"module"}