{"ast":null,"code":"import _objectSpread from \"/Users/Hadley/src/workout-logger/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { createSlice, createSelector } from 'redux-starter-kit';\nconst initialState = {\n  squat: {\n    byId: {\n      0: {\n        weight: 255,\n        reps: 5,\n        rpe: 8,\n        date: 1562704818000\n      },\n      1: {\n        weight: 205,\n        reps: 8,\n        rpe: 8,\n        date: 1562618418000\n      },\n      2: {\n        weight: 205,\n        reps: 8,\n        rpe: 8,\n        date: 1562445618000\n      },\n      3: {\n        weight: 205,\n        reps: 8,\n        rpe: 8,\n        date: 1562272818000\n      },\n      4: {\n        weight: 205,\n        reps: 8,\n        rpe: 8,\n        date: 1562100018000\n      }\n    },\n    allIds: [0, 1, 2, 3, 4]\n  },\n  deadlift: {\n    byId: {\n      0: {\n        weight: 255,\n        reps: 5,\n        rpe: 8,\n        date: 1562704818000\n      },\n      1: {\n        weight: 205,\n        reps: 8,\n        rpe: 8,\n        date: 1562618418000\n      },\n      2: {\n        weight: 205,\n        reps: 8,\n        rpe: 8,\n        date: 1562445618000\n      },\n      3: {\n        weight: 205,\n        reps: 8,\n        rpe: 8,\n        date: 1562272818000\n      },\n      4: {\n        weight: 205,\n        reps: 8,\n        rpe: 8,\n        date: 1562100018000\n      }\n    },\n    allIds: [0, 1, 2, 3, 4]\n  },\n  'bench press': {\n    byId: {\n      0: {\n        weight: 255,\n        reps: 5,\n        rpe: 8,\n        date: 1562704818000\n      },\n      1: {\n        weight: 205,\n        reps: 8,\n        rpe: 8,\n        date: 1562618418000\n      },\n      2: {\n        weight: 205,\n        reps: 8,\n        rpe: 8,\n        date: 1562445618000\n      },\n      3: {\n        weight: 205,\n        reps: 8,\n        rpe: 8,\n        date: 1562272818000\n      },\n      4: {\n        weight: 205,\n        reps: 8,\n        rpe: 8,\n        date: 1562100018000\n      }\n    },\n    allIds: [0, 1, 2, 3, 4]\n  }\n};\nconst liftHistory = createSlice({\n  slice: 'liftHistory',\n  initialState: initialState,\n  reducers: {}\n});\nconst getLiftNamesAlphabetized = createSelector(['liftHistory'], lifts => Object.keys(lifts).sort());\nconst getHistoryForLift = createSelector([{\n  path: 'lift',\n  argIndex: 0\n}, 'liftHistory'], (liftName, lifts) => liftName);\nconst testState = {\n  liftHistory: _objectSpread({}, initialState)\n};\nconsole.log(getHistoryForLift(testState, 'teset'));\nconst actions = liftHistory.actions,\n      reducer = liftHistory.reducer;\nexport { getLiftNamesAlphabetized };\nexport { actions as liftHistoryActions };\nexport default reducer;","map":{"version":3,"sources":["/Users/Hadley/src/workout-logger/src/redux/slices/liftHistory.js"],"names":["createSlice","createSelector","initialState","squat","byId","weight","reps","rpe","date","allIds","deadlift","liftHistory","slice","reducers","getLiftNamesAlphabetized","lifts","Object","keys","sort","getHistoryForLift","path","argIndex","liftName","testState","console","log","actions","reducer","liftHistoryActions"],"mappings":"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","sourcesContent":["import { createSlice, createSelector } from 'redux-starter-kit';\n\nconst initialState = {\n  squat: {\n    byId: {\n      0: {\n        weight: 255,\n        reps: 5,\n        rpe: 8,\n        date: 1562704818000\n      },\n      1: {\n        weight: 205,\n        reps: 8,\n        rpe: 8,\n        date: 1562618418000\n      },\n      2: {\n        weight: 205,\n        reps: 8,\n        rpe: 8,\n        date: 1562445618000\n      },\n      3: {\n        weight: 205,\n        reps: 8,\n        rpe: 8,\n        date: 1562272818000\n      },\n      4: {\n        weight: 205,\n        reps: 8,\n        rpe: 8,\n        date: 1562100018000\n      }\n    },\n    allIds: [0, 1, 2, 3, 4]\n  },\n  deadlift: {\n    byId: {\n      0: {\n        weight: 255,\n        reps: 5,\n        rpe: 8,\n        date: 1562704818000\n      },\n      1: {\n        weight: 205,\n        reps: 8,\n        rpe: 8,\n        date: 1562618418000\n      },\n      2: {\n        weight: 205,\n        reps: 8,\n        rpe: 8,\n        date: 1562445618000\n      },\n      3: {\n        weight: 205,\n        reps: 8,\n        rpe: 8,\n        date: 1562272818000\n      },\n      4: {\n        weight: 205,\n        reps: 8,\n        rpe: 8,\n        date: 1562100018000\n      }\n    },\n    allIds: [0, 1, 2, 3, 4]\n  },\n  'bench press': {\n    byId: {\n      0: {\n        weight: 255,\n        reps: 5,\n        rpe: 8,\n        date: 1562704818000\n      },\n      1: {\n        weight: 205,\n        reps: 8,\n        rpe: 8,\n        date: 1562618418000\n      },\n      2: {\n        weight: 205,\n        reps: 8,\n        rpe: 8,\n        date: 1562445618000\n      },\n      3: {\n        weight: 205,\n        reps: 8,\n        rpe: 8,\n        date: 1562272818000\n      },\n      4: {\n        weight: 205,\n        reps: 8,\n        rpe: 8,\n        date: 1562100018000\n      }\n    },\n    allIds: [0, 1, 2, 3, 4]\n  }\n};\n\nconst liftHistory = createSlice({\n  slice: 'liftHistory',\n  initialState: initialState,\n  reducers: {}\n});\n\nconst getLiftNamesAlphabetized = createSelector(\n  ['liftHistory'],\n  lifts => Object.keys(lifts).sort()\n);\n\nconst getHistoryForLift = createSelector(\n  [{ path: 'lift', argIndex: 0 }, 'liftHistory'],\n  (liftName, lifts) => liftName\n);\n\nconst testState = {\n  liftHistory: { ...initialState }\n};\n\nconsole.log(getHistoryForLift(testState, 'teset'));\n\nconst { actions, reducer } = liftHistory;\n\nexport { getLiftNamesAlphabetized };\nexport { actions as liftHistoryActions };\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}