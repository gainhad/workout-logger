{"ast":null,"code":"var _jsxFileName = \"/Users/Hadley/src/workout-logger/src/components/Modal.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.scss';\n\nconst Modal = props => {\n  if (props.isOpen) {\n    ReactDOM.createPortal(React.createElement(\"div\", {\n      className: \"modal\",\n      id: props.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, props.toggleButton && React.createElement(\"button\", {\n      type: \"button\",\n      onClick: props.toggle,\n      id: \"close-modal-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"X\"), props.children), document.getElementById('App'));\n  } else {\n    return null;\n  }\n};\n\nModal.defaultProps = {\n  toggleButton: true\n};\nexport default Modal;","map":{"version":3,"sources":["/Users/Hadley/src/workout-logger/src/components/Modal.js"],"names":["React","ReactDOM","Modal","props","isOpen","createPortal","id","toggleButton","toggle","children","document","getElementById","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAO,cAAP;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrB,MAAGA,KAAK,CAACC,MAAT,EAAiB;AACfH,IAAAA,QAAQ,CAACI,YAAT,CACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,EAAE,EAAEF,KAAK,CAACG,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKH,KAAK,CAACI,YAAN,IACC;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEJ,KAAK,CAACK,MAArC;AAA6C,MAAA,EAAE,EAAC,oBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFN,EAMSL,KAAK,CAACM,QANf,CADF,EAQgBC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CARhB;AASG,GAVL,MAUW;AACP,WAAO,IAAP;AACD;AAEJ,CAfD;;AAiBAT,KAAK,CAACU,YAAN,GAAqB;AACnBL,EAAAA,YAAY,EAAE;AADK,CAArB;AAIA,eAAeL,KAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Modal.scss';\n\nconst Modal = props => {\n  if(props.isOpen) {\n    ReactDOM.createPortal(\n      <div className=\"modal\" id={props.id}>\n          {props.toggleButton && (\n            <button type=\"button\" onClick={props.toggle} id=\"close-modal-button\">\n                X\n            </button>\n          )}\n              {props.children}\n            </div>, document.getElementById('App')\n    ) } else {\n      return null\n    }\n  \n};\n\nModal.defaultProps = {\n  toggleButton: true\n};\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}