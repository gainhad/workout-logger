{"ast":null,"code":"import _slicedToArray from \"/Users/Hadley/src/workout-logger/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Hadley/src/workout-logger/src/components/LiftLog.js\";\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getCurrentLift, atBeginning, atEnd, currentWorkoutActions } from '../redux/slices/currentWorkout';\nimport Modal from './Modal';\nimport NewSet from './NewSet';\nimport NewLift from './NewLift';\n\nconst LiftLog = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        liftEditable = _useState2[0],\n        setLiftEditable = _useState2[1];\n\n  const lift = useSelector(getCurrentLift);\n  const atFirstLift = useSelector(atBeginning);\n  const atLastLift = useSelector(atEnd);\n  const dispatch = useDispatch();\n\n  const selectPreviousLift = () => dispatch(currentWorkoutActions.incrementCurrentLiftIndex());\n\n  const selectNextLift = () => dispatch(currentWorkoutActions.decrementCurrentLiftIndex());\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        setModalOpen = _useState4[0],\n        setSetModalOpen = _useState4[1];\n\n  return React.createElement(\"div\", {\n    id: \"lift-log\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(LiftSelector, {\n    atBeginning: atFirstLift,\n    atEnd: atLastLift,\n    currentLift: lift,\n    selectPreviousLift: selectPreviousLift,\n    selectNextLift: selectNextLift,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(InfoDisplay, {\n    editable: liftEditable,\n    setEditSetModal: props.setEditSetModal,\n    sets: lift.sets,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    id: \"edit-button\",\n    onClick: () => setLiftEditable(!liftEditable),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"EDIT\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setSetModalOpen(true),\n    className: \"arrow-button\",\n    id: \"add-set-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"\\uFF0B\"), React.createElement(Modal, {\n    isOpen: setModalOpen,\n    registerClose: () => setSetModalOpen(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(NewSet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })));\n}; // TODO - Break this off into it's own component.\n\n\nconst LiftSelector = props => {\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        newLiftModalOpen = _useState6[0],\n        setNewLiftModalOpen = _useState6[1];\n\n  return React.createElement(\"div\", {\n    id: \"lift-selector\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, !props.atEnd ? React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => props.selectPreviousLift(),\n    className: \"arrow-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"\\u2190\") : null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, props.currentLift.name.toUpperCase()), props.atBeginning ? React.createElement(\"button\", {\n    type: \"button\",\n    className: \"arrow-button\",\n    onClick: () => setNewLiftModalOpen(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"\\uFF0B\") : React.createElement(\"button\", {\n    type: \"button\",\n    className: \"arrow-button\",\n    onClick: () => props.selectNextLift(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"\\u2192\"), React.createElement(Modal, {\n    isOpen: newLiftModalOpen,\n    registerClose: () => setNewLiftModalOpen(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(NewLift, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })));\n}; // TODO - Break this off into it's own component.\n\n\nconst InfoDisplay = props => {\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        editSetModal = _useState8[0],\n        setEditSetModal = _useState8[1];\n\n  const setList = props.sets.map((set, index) => React.createElement(\"div\", {\n    className: props.editable ? 'set editable' : 'set',\n    key: index,\n    onClick: () => props.editable ? setEditSetModal(true) : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"set-weight grid-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, set.weight), \" \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"lbs\")), React.createElement(\"div\", {\n    className: \"set-reps\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, set.reps), \" \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"reps\")), React.createElement(\"div\", {\n    className: \"set-rpe grid-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"@\"), \" \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, set.rpe))));\n  return React.createElement(\"div\", {\n    id: \"info-display\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, setList);\n};\n\nexport default LiftLog;","map":{"version":3,"sources":["/Users/Hadley/src/workout-logger/src/components/LiftLog.js"],"names":["React","useState","useSelector","useDispatch","getCurrentLift","atBeginning","atEnd","currentWorkoutActions","Modal","NewSet","NewLift","LiftLog","props","liftEditable","setLiftEditable","lift","atFirstLift","atLastLift","dispatch","selectPreviousLift","incrementCurrentLiftIndex","selectNextLift","decrementCurrentLiftIndex","setModalOpen","setSetModalOpen","setEditSetModal","sets","LiftSelector","newLiftModalOpen","setNewLiftModalOpen","currentLift","name","toUpperCase","InfoDisplay","editSetModal","setList","map","set","index","editable","weight","reps","rpe"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  getCurrentLift,\n  atBeginning,\n  atEnd,\n  currentWorkoutActions\n} from '../redux/slices/currentWorkout';\nimport Modal from './Modal';\nimport NewSet from './NewSet';\nimport NewLift from './NewLift';\n\nconst LiftLog = props => {\n  const [liftEditable, setLiftEditable] = useState(false);\n  const lift = useSelector(getCurrentLift);\n  const atFirstLift = useSelector(atBeginning);\n  const atLastLift = useSelector(atEnd);\n  const dispatch = useDispatch();\n  const selectPreviousLift = () =>\n    dispatch(currentWorkoutActions.incrementCurrentLiftIndex());\n  const selectNextLift = () =>\n    dispatch(currentWorkoutActions.decrementCurrentLiftIndex());\n  const [setModalOpen, setSetModalOpen] = useState(false);\n\n  return (\n    <div id=\"lift-log\">\n      <LiftSelector\n        atBeginning={atFirstLift}\n        atEnd={atLastLift}\n        currentLift={lift}\n        selectPreviousLift={selectPreviousLift}\n        selectNextLift={selectNextLift}\n      />\n      <InfoDisplay\n        editable={liftEditable}\n        setEditSetModal={props.setEditSetModal}\n        sets={lift.sets}\n      />\n      <button\n        type=\"button\"\n        id=\"edit-button\"\n        onClick={() => setLiftEditable(!liftEditable)}\n      >\n        EDIT\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => setSetModalOpen(true)}\n        className=\"arrow-button\"\n        id=\"add-set-button\"\n      >\n        &#65291;\n      </button>\n      <Modal isOpen={setModalOpen} registerClose={() => setSetModalOpen(false)}>\n        <NewSet />\n      </Modal>\n    </div>\n  );\n};\n\n// TODO - Break this off into it's own component.\nconst LiftSelector = props => {\n  const [newLiftModalOpen, setNewLiftModalOpen] = useState(false);\n  return (\n    <div id=\"lift-selector\">\n      {!props.atEnd ? (\n        <button\n          type=\"button\"\n          onClick={() => props.selectPreviousLift()}\n          className=\"arrow-button\"\n        >\n          &larr;\n        </button>\n      ) : null}\n      <h2>{props.currentLift.name.toUpperCase()}</h2>\n      {props.atBeginning ? (\n        <button\n          type=\"button\"\n          className=\"arrow-button\"\n          onClick={() => setNewLiftModalOpen(true)}\n        >\n          &#65291;\n        </button>\n      ) : (\n        <button\n          type=\"button\"\n          className=\"arrow-button\"\n          onClick={() => props.selectNextLift()}\n        >\n          &rarr;\n        </button>\n      )}\n      <Modal\n        isOpen={newLiftModalOpen}\n        registerClose={() => setNewLiftModalOpen(false)}\n      >\n        <NewLift />\n      </Modal>\n    </div>\n  );\n};\n\n// TODO - Break this off into it's own component.\nconst InfoDisplay = props => {\n  const [editSetModal, setEditSetModal] = useState(false);\n  const setList = props.sets.map((set, index) => (\n    <div\n      className={props.editable ? 'set editable' : 'set'}\n      key={index}\n      onClick={() =>\n        props.editable\n          ? setEditSetModal(true)\n          : null\n      }\n    >\n      <div className=\"set-weight grid-left\">\n        <b>{set.weight}</b> <span>lbs</span>\n      </div>\n      <div className=\"set-reps\">\n        <b>{set.reps}</b> <span>reps</span>\n      </div>\n      <div className=\"set-rpe grid-left\">\n        <span>@</span> <b>{set.rpe}</b>\n      </div>\n    </div>\n  ));\n  return <div id=\"info-display\">{setList}</div>;\n};\n\nexport default LiftLog;\n"]},"metadata":{},"sourceType":"module"}