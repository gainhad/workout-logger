{"ast":null,"code":"var _jsxFileName = \"/Users/Hadley/src/workout-logger/src/components/RestTimer.js\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport './RestTimer.scss';\nimport { prettyDisplayTime } from '../utils/displayHelpers';\nimport { useInterval } from '../utils/customHooks';\n\nconst RestTimer = props => {\n  const timerStarted = useSelector(state => state.currentWorkout.restTimer.timeStarted);\n  console.log(timerStarted);\n  let secondsRemaining = null;\n  useInterval(() => secondsRemaining = Date.now() - timerStarted, 1000);\n  console.log(secondsRemaining);\n\n  if (secondsRemaining) {\n    return React.createElement(\"div\", {\n      className: \"rest-timer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"REST COUNTDOWN: \", prettyDisplayTime(secondsRemaining));\n  } else {\n    return null;\n  }\n};\n\nexport default RestTimer;","map":{"version":3,"sources":["/Users/Hadley/src/workout-logger/src/components/RestTimer.js"],"names":["React","useSelector","prettyDisplayTime","useInterval","RestTimer","props","timerStarted","state","currentWorkout","restTimer","timeStarted","console","log","secondsRemaining","Date","now"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,kBAAP;AACA,SAASC,iBAAT,QAAkC,yBAAlC;AACA,SAASC,WAAT,QAA4B,sBAA5B;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAMC,YAAY,GAAGL,WAAW,CAC9BM,KAAK,IAAIA,KAAK,CAACC,cAAN,CAAqBC,SAArB,CAA+BC,WADV,CAAhC;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,YAAZ;AACA,MAAIO,gBAAgB,GAAG,IAAvB;AACAV,EAAAA,WAAW,CAAC,MAAOU,gBAAgB,GAAGC,IAAI,CAACC,GAAL,KAAaT,YAAxC,EAAuD,IAAvD,CAAX;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAYC,gBAAZ;;AACA,MAAIA,gBAAJ,EAAsB;AACtB,WACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACmBX,iBAAiB,CAACW,gBAAD,CADpC,CADF;AAKC,GAND,MAMO;AACL,WAAO,IAAP;AACD;AACF,CAlBD;;AAoBA,eAAeT,SAAf","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport './RestTimer.scss';\nimport { prettyDisplayTime } from '../utils/displayHelpers';\nimport { useInterval } from '../utils/customHooks';\n\nconst RestTimer = props => {\n  const timerStarted = useSelector(\n    state => state.currentWorkout.restTimer.timeStarted\n  );\n  console.log(timerStarted);\n  let secondsRemaining = null;\n  useInterval(() => (secondsRemaining = Date.now() - timerStarted), 1000);\n\n  console.log(secondsRemaining);\n  if (secondsRemaining) {\n  return (\n    <div className=\"rest-timer\">\n      REST COUNTDOWN: {prettyDisplayTime(secondsRemaining)}\n    </div>\n  );\n  } else {\n    return null\n  }\n};\n\nexport default RestTimer;\n"]},"metadata":{},"sourceType":"module"}