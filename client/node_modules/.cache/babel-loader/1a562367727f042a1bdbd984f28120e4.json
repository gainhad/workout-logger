{"ast":null,"code":"import _slicedToArray from \"/Users/Hadley/src/workout-logger/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Hadley/src/workout-logger/src/components/Modal.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.scss';\n\nconst Modal = props => {\n  const _useState = useState(props.isOpen),\n        _useState2 = _slicedToArray(_useState, 2),\n        isOpen = _useState2[0],\n        setIsOpen = _useState2[1];\n\n  useEffect(() => setIsOpen(props.isOpen), props.isOpen);\n\n  const closeModal = () => setIsOpen(false);\n\n  console.log('Modal isOpen: ', isOpen);\n  console.log('Modal props.isOpen: ', props.isOpen);\n\n  if (isOpen) {\n    return ReactDOM.createPortal(React.createElement(\"div\", {\n      className: \"modal\",\n      id: props.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, props.toggleButton && React.createElement(\"button\", {\n      type: \"button\",\n      onClick: closeModal,\n      id: \"close-modal-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"X\"), React.cloneElement(props.children, {\n      closeModal: closeModal\n    })), document.getElementById('root'));\n  } else {\n    return null;\n  }\n};\n\nModal.defaultProps = {\n  toggleButton: false\n};\nexport default Modal;","map":{"version":3,"sources":["/Users/Hadley/src/workout-logger/src/components/Modal.js"],"names":["React","useState","useEffect","ReactDOM","Modal","props","isOpen","setIsOpen","closeModal","console","log","createPortal","id","toggleButton","cloneElement","children","document","getElementById","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAO,cAAP;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AAAA,oBACOJ,QAAQ,CAACI,KAAK,CAACC,MAAP,CADf;AAAA;AAAA,QACdA,MADc;AAAA,QACNC,SADM;;AAErBL,EAAAA,SAAS,CAAC,MAAMK,SAAS,CAACF,KAAK,CAACC,MAAP,CAAhB,EAAgCD,KAAK,CAACC,MAAtC,CAAT;;AACA,QAAME,UAAU,GAAG,MAAMD,SAAS,CAAC,KAAD,CAAlC;;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BJ,MAA9B;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCL,KAAK,CAACC,MAA1C;;AAEA,MAAIA,MAAJ,EAAY;AACV,WAAOH,QAAQ,CAACQ,YAAT,CACL;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,EAAE,EAAEN,KAAK,CAACO,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGP,KAAK,CAACQ,YAAN,IACC;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEL,UAA/B;AAA2C,MAAA,EAAE,EAAC,oBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,EAMGR,KAAK,CAACc,YAAN,CAAmBT,KAAK,CAACU,QAAzB,EAAmC;AAAEP,MAAAA,UAAU,EAAEA;AAAd,KAAnC,CANH,CADK,EASLQ,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CATK,CAAP;AAWD,GAZD,MAYO;AACL,WAAO,IAAP;AACD;AACF,CAtBD;;AAwBAb,KAAK,CAACc,YAAN,GAAqB;AACnBL,EAAAA,YAAY,EAAE;AADK,CAArB;AAIA,eAAeT,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Modal.scss';\n\nconst Modal = props => {\n  const [isOpen, setIsOpen] = useState(props.isOpen);\n  useEffect(() => setIsOpen(props.isOpen), props.isOpen);\n  const closeModal = () => setIsOpen(false);\n  console.log('Modal isOpen: ', isOpen);\n  console.log('Modal props.isOpen: ', props.isOpen);\n\n  if (isOpen) {\n    return ReactDOM.createPortal(\n      <div className=\"modal\" id={props.id}>\n        {props.toggleButton && (\n          <button type=\"button\" onClick={closeModal} id=\"close-modal-button\">\n            X\n          </button>\n        )}\n        {React.cloneElement(props.children, { closeModal: closeModal })}\n      </div>,\n      document.getElementById('root')\n    );\n  } else {\n    return null;\n  }\n};\n\nModal.defaultProps = {\n  toggleButton: false\n};\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}