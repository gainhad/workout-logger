{"ast":null,"code":"import { createSlice } from 'redux-starter-kit';\nconst initialState = {\n  lifts: [{\n    name: 'SQUAT',\n    sets: []\n  }, {\n    name: 'DEADLIFT',\n    sets: []\n  }, {\n    name: 'BENCH PRESS',\n    sets: []\n  }],\n  currentLiftIndex: 0\n};\n\nfunction addLiftReducer(state, action) {\n  state.lifts.push({\n    name: action.payload.name,\n    sets: []\n  });\n}\n\nfunction deleteLiftReducer(state, action) {\n  state.lifts.splice(action.payload.index, 1);\n}\n\nfunction renameLiftReducer(state, action) {\n  state.lifts[action.payload.index].name = action.payload.name;\n}\n\nfunction addSetReducer(state, action) {\n  state.lifts[action.payload.liftIndex].sets.push(action.payload.set);\n}\n\nfunction deleteSetReducer(state, action) {\n  state.lifts[action.payload.liftIndex].sets.splice(action.payload.setIndex, 1);\n}\n\nconst currentWorkout = createSlice({\n  slice: 'currentWorkout',\n  initialState: initialState,\n  reducers: {\n    addLift: addLiftReducer,\n    deleteLift: deleteLiftReducer,\n    renameLift: renameLiftReducer,\n    addSet: addSetReducer,\n    deleteSet: deleteSetReducer\n  }\n});\nconst actions = currentWorkout.actions,\n      reducer = currentWorkout.reducer;\nconst addLift = actions.addLift,\n      deleteLift = actions.deleteLift,\n      renameLift = actions.renameLift,\n      deleteSet = actions.deleteSet;\nexport { addLift, deleteLift, renameLift, deleteSet };\nexport { initialState };\nexport default reducer;","map":{"version":3,"sources":["/Users/Hadley/src/workout-logger/src/redux/slices/currentWorkout.js"],"names":["createSlice","initialState","lifts","name","sets","currentLiftIndex","addLiftReducer","state","action","push","payload","deleteLiftReducer","splice","index","renameLiftReducer","addSetReducer","liftIndex","set","deleteSetReducer","setIndex","currentWorkout","slice","reducers","addLift","deleteLift","renameLift","addSet","deleteSet","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,mBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,CAAC;AAAEC,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,IAAI,EAAE;AAAvB,GAAD,EAA8B;AAAED,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,IAAI,EAAE;AAA1B,GAA9B,EAA8D;AAAED,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,IAAI,EAAE;AAA7B,GAA9D,CADY;AAEnBC,EAAAA,gBAAgB,EAAE;AAFC,CAArB;;AAKA,SAASC,cAAT,CAAwBC,KAAxB,EAA+BC,MAA/B,EAAuC;AACrCD,EAAAA,KAAK,CAACL,KAAN,CAAYO,IAAZ,CAAiB;AAAEN,IAAAA,IAAI,EAAEK,MAAM,CAACE,OAAP,CAAeP,IAAvB;AAA6BC,IAAAA,IAAI,EAAE;AAAnC,GAAjB;AACD;;AAED,SAASO,iBAAT,CAA2BJ,KAA3B,EAAkCC,MAAlC,EAA0C;AACxCD,EAAAA,KAAK,CAACL,KAAN,CAAYU,MAAZ,CAAmBJ,MAAM,CAACE,OAAP,CAAeG,KAAlC,EAAyC,CAAzC;AACD;;AAED,SAASC,iBAAT,CAA2BP,KAA3B,EAAkCC,MAAlC,EAA0C;AACxCD,EAAAA,KAAK,CAACL,KAAN,CAAYM,MAAM,CAACE,OAAP,CAAeG,KAA3B,EAAkCV,IAAlC,GAAyCK,MAAM,CAACE,OAAP,CAAeP,IAAxD;AACD;;AAED,SAASY,aAAT,CAAuBR,KAAvB,EAA8BC,MAA9B,EAAsC;AACpCD,EAAAA,KAAK,CAACL,KAAN,CAAYM,MAAM,CAACE,OAAP,CAAeM,SAA3B,EAAsCZ,IAAtC,CAA2CK,IAA3C,CAAgDD,MAAM,CAACE,OAAP,CAAeO,GAA/D;AACD;;AAED,SAASC,gBAAT,CAA0BX,KAA1B,EAAiCC,MAAjC,EAAyC;AACvCD,EAAAA,KAAK,CAACL,KAAN,CAAYM,MAAM,CAACE,OAAP,CAAeM,SAA3B,EAAsCZ,IAAtC,CAA2CQ,MAA3C,CAAkDJ,MAAM,CAACE,OAAP,CAAeS,QAAjE,EAA2E,CAA3E;AACD;;AAED,MAAMC,cAAc,GAAGpB,WAAW,CAAC;AACjCqB,EAAAA,KAAK,EAAE,gBAD0B;AAEjCpB,EAAAA,YAAY,EAAEA,YAFmB;AAGjCqB,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAEjB,cADD;AAERkB,IAAAA,UAAU,EAAEb,iBAFJ;AAGRc,IAAAA,UAAU,EAAEX,iBAHJ;AAIRY,IAAAA,MAAM,EAAEX,aAJA;AAKRY,IAAAA,SAAS,EAAET;AALH;AAHuB,CAAD,CAAlC;MAYQU,O,GAAqBR,c,CAArBQ,O;MAASC,O,GAAYT,c,CAAZS,O;MACFN,O,GAA+CK,O,CAA/CL,O;MAASC,U,GAAsCI,O,CAAtCJ,U;MAAYC,U,GAA0BG,O,CAA1BH,U;MAAYE,S,GAAcC,O,CAAdD,S;;AAChD,SAAS1B,YAAT;AACA,eAAe4B,OAAf","sourcesContent":["import { createSlice } from 'redux-starter-kit';\n\nconst initialState = {\n  lifts: [{ name: 'SQUAT', sets: [] }, { name: 'DEADLIFT', sets: [] }, { name: 'BENCH PRESS', sets: [] }],\n  currentLiftIndex: 0\n};\n\nfunction addLiftReducer(state, action) {\n  state.lifts.push({ name: action.payload.name, sets: [] });\n}\n\nfunction deleteLiftReducer(state, action) {\n  state.lifts.splice(action.payload.index, 1);\n}\n\nfunction renameLiftReducer(state, action) {\n  state.lifts[action.payload.index].name = action.payload.name;\n}\n\nfunction addSetReducer(state, action) {\n  state.lifts[action.payload.liftIndex].sets.push(action.payload.set);\n}\n\nfunction deleteSetReducer(state, action) {\n  state.lifts[action.payload.liftIndex].sets.splice(action.payload.setIndex, 1);\n}\n\nconst currentWorkout = createSlice({\n  slice: 'currentWorkout',\n  initialState: initialState,\n  reducers: {\n    addLift: addLiftReducer,\n    deleteLift: deleteLiftReducer,\n    renameLift: renameLiftReducer,\n    addSet: addSetReducer,\n    deleteSet: deleteSetReducer\n  }\n});\n\nconst { actions, reducer } = currentWorkout;\nexport const { addLift, deleteLift, renameLift, deleteSet } = actions;\nexport { initialState };\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}