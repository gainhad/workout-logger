{"ast":null,"code":"import _slicedToArray from \"/Users/Hadley/src/workout-logger/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Hadley/src/workout-logger/src/components/LiftLog.js\";\nimport React, { useState } from 'react';\nimport { connect, useSelector, useDispatch } from 'react-redux';\nimport { getCurrentLift, incrementCurrentLiftIndex, decrementCurrentLiftIndex, atBeginning, atEnd } from '../redux/slices/currentWorkout';\n\nconst LiftLog = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        liftEditable = _useState2[0],\n        setLiftEditable = _useState2[1];\n\n  const lift = useSelector(getCurrentLift);\n  const atFirstLift = useSelector(atBeginning);\n  const atLastLift = useSelector(atEnd);\n  const dispatch = useDispatch();\n\n  const selectPreviousLift = () => {\n    console.log(\"worked!\");\n    dispatch(incrementCurrentLiftIndex);\n  };\n\n  return React.createElement(\"div\", {\n    id: \"lift-log\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(LiftSelector, {\n    atBeginning: atFirstLift,\n    atEnd: atLastLift,\n    currentLift: lift,\n    selectPreviousLift: selectPreviousLift,\n    selectNextLift: props.selectNextLift,\n    toggleNewLiftModal: props.toggleNewLiftModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(InfoDisplay //editable={liftEditable}\n  , {\n    setEditSetModal: props.setEditSetModal,\n    sets: lift.sets,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    id: \"edit-button\",\n    onClick: () => null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"EDIT\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: props.toggleSetModal,\n    className: \"arrow-button\",\n    id: \"add-set-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"\\uFF0B\"));\n};\n\nconst LiftSelector = props => {\n  return React.createElement(\"div\", {\n    id: \"lift-selector\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, !props.atEnd ? React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => props.selectPreviousLift(),\n    className: \"arrow-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"\\u2190\") : null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, props.currentLift.name.toUpperCase()), props.atBeginning ? React.createElement(\"button\", {\n    type: \"button\",\n    className: \"arrow-button\",\n    onClick: props.toggleNewLiftModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"\\uFF0B\") : React.createElement(\"button\", {\n    type: \"button\",\n    className: \"arrow-button\",\n    onClick: () => props.selectNextLift(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"\\u2192\"));\n};\n\nconst InfoDisplay = props => {\n  const setList = props.sets.map((set, index) => React.createElement(\"div\", {\n    className: props.editable ? 'set editable' : 'set',\n    key: index,\n    onClick: () => props.editable ? props.setEditSetModal({\n      display: true,\n      index: index\n    }) : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"set-weight grid-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, set.weight), \" \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"lbs\")), React.createElement(\"div\", {\n    className: \"set-reps\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, set.reps), \" \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"reps\")), React.createElement(\"div\", {\n    className: \"set-rpe grid-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"@\"), \" \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, set.rpe))));\n  return React.createElement(\"div\", {\n    id: \"info-display\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, setList);\n};\n\nconst mapDispatchToProps = {\n  selectNextLift: decrementCurrentLiftIndex,\n  selectPreviousLift: incrementCurrentLiftIndex\n};\nexport default connect(null, mapDispatchToProps)(LiftLog);","map":{"version":3,"sources":["/Users/Hadley/src/workout-logger/src/components/LiftLog.js"],"names":["React","useState","connect","useSelector","useDispatch","getCurrentLift","incrementCurrentLiftIndex","decrementCurrentLiftIndex","atBeginning","atEnd","LiftLog","props","liftEditable","setLiftEditable","lift","atFirstLift","atLastLift","dispatch","selectPreviousLift","console","log","selectNextLift","toggleNewLiftModal","setEditSetModal","sets","toggleSetModal","LiftSelector","currentLift","name","toUpperCase","InfoDisplay","setList","map","set","index","editable","display","weight","reps","rpe","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect, useSelector, useDispatch } from 'react-redux';\nimport {\n  getCurrentLift,\n  incrementCurrentLiftIndex,\n  decrementCurrentLiftIndex,\n  atBeginning,\n  atEnd\n} from '../redux/slices/currentWorkout';\n\nconst LiftLog = props => {\n  const [liftEditable, setLiftEditable] = useState(false);\n  const lift = useSelector(getCurrentLift);\n  const atFirstLift = useSelector(atBeginning);\n  const atLastLift = useSelector(atEnd);\n  const dispatch = useDispatch();\n  const selectPreviousLift = () => {\n    console.log(\"worked!\");\n    dispatch(incrementCurrentLiftIndex);\n  }\n\n  return (\n    <div id=\"lift-log\">\n      <LiftSelector\n        atBeginning={atFirstLift}\n        atEnd={atLastLift}\n        currentLift={lift}\n        selectPreviousLift={selectPreviousLift}\n        selectNextLift={props.selectNextLift}\n        toggleNewLiftModal={props.toggleNewLiftModal}\n      />\n      <InfoDisplay\n        //editable={liftEditable}\n        setEditSetModal={props.setEditSetModal}\n        sets={lift.sets}\n      />\n      <button type=\"button\" id=\"edit-button\" onClick={() => null}>\n        EDIT\n      </button>\n      <button\n        type=\"button\"\n        onClick={props.toggleSetModal}\n        className=\"arrow-button\"\n        id=\"add-set-button\"\n      >\n        &#65291;\n      </button>\n    </div>\n  );\n};\n\nconst LiftSelector = props => {\n  return (\n    <div id=\"lift-selector\">\n      {!props.atEnd ? (\n        <button\n          type=\"button\"\n          onClick={() => props.selectPreviousLift()}\n          className=\"arrow-button\"\n        >\n          &larr;\n        </button>\n      ) : null}\n      <h2>{props.currentLift.name.toUpperCase()}</h2>\n      {props.atBeginning ? (\n        <button\n          type=\"button\"\n          className=\"arrow-button\"\n          onClick={props.toggleNewLiftModal}\n        >\n          &#65291;\n        </button>\n      ) : (\n        <button\n          type=\"button\"\n          className=\"arrow-button\"\n          onClick={() => props.selectNextLift()}\n        >\n          &rarr;\n        </button>\n      )}\n    </div>\n  );\n};\n\nconst InfoDisplay = props => {\n  const setList = props.sets.map((set, index) => (\n    <div\n      className={props.editable ? 'set editable' : 'set'}\n      key={index}\n      onClick={() =>\n        props.editable\n          ? props.setEditSetModal({ display: true, index: index })\n          : null\n      }\n    >\n      <div className=\"set-weight grid-left\">\n        <b>{set.weight}</b> <span>lbs</span>\n      </div>\n      <div className=\"set-reps\">\n        <b>{set.reps}</b> <span>reps</span>\n      </div>\n      <div className=\"set-rpe grid-left\">\n        <span>@</span> <b>{set.rpe}</b>\n      </div>\n    </div>\n  ));\n  return <div id=\"info-display\">{setList}</div>;\n};\nconst mapDispatchToProps = {\n  selectNextLift: decrementCurrentLiftIndex,\n  selectPreviousLift: incrementCurrentLiftIndex\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(LiftLog);\n"]},"metadata":{},"sourceType":"module"}