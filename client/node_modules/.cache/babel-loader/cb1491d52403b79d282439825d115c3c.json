{"ast":null,"code":"import _slicedToArray from \"/Users/Hadley/src/workout-logger/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Hadley/src/workout-logger/src/components/Workout.js\";\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport LiftLog from './LiftLog';\nimport Modal from './Modal';\nimport Backdrop from './Backdrop';\nimport './Workout.scss';\n\nconst Workout = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isBlurred = _useState2[0],\n        setIsBlurred = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newSetModal = _useState4[0],\n        setNewSetModal = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        timesModal = _useState6[0],\n        setTimesModal = _useState6[1];\n\n  const toggleModal = () => {\n    setNewSetPopup(!newSetPopup);\n    setIsBlurred(!isBlurred);\n  };\n\n  let test = isBlurred ? 'blurred' : '';\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"workout-screen\",\n    className: test,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    class: \"upper-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    class: \"arrow-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"\\u2190\")), React.createElement(\"button\", {\n    type: \"button\",\n    class: \"upper-right button-underline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"TIMES\"), React.createElement(LiftLog, {\n    toggleModal: toggleModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })), newSetModal && React.createElement(Modal, {\n    toggle: toggleModal,\n    id: \"new-set-modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), newSetModal && React.createElement(Backdrop, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }));\n};\n\nexport default Workout;","map":{"version":3,"sources":["/Users/Hadley/src/workout-logger/src/components/Workout.js"],"names":["React","useState","Link","LiftLog","Modal","Backdrop","Workout","props","isBlurred","setIsBlurred","newSetModal","setNewSetModal","timesModal","setTimesModal","toggleModal","setNewSetPopup","newSetPopup","test"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,gBAAP;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AAAA,oBACWN,QAAQ,CAAC,KAAD,CADnB;AAAA;AAAA,QAChBO,SADgB;AAAA,QACLC,YADK;;AAAA,qBAEeR,QAAQ,CAAC,KAAD,CAFvB;AAAA;AAAA,QAEhBS,WAFgB;AAAA,QAEHC,cAFG;;AAAA,qBAGaV,QAAQ,CAAC,KAAD,CAHrB;AAAA;AAAA,QAGhBW,UAHgB;AAAA,QAGJC,aAHI;;AAIvB,QAAMC,WAAW,GAAG,MAAM;AACxBC,IAAAA,cAAc,CAAC,CAACC,WAAF,CAAd;AACAP,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAHD;;AAIA,MAAIS,IAAI,GAAGT,SAAS,GAAG,SAAH,GAAe,EAAnC;AAEA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,EAAE,EAAC,gBAAR;AAAyB,IAAA,SAAS,EAAES,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAa,IAAA,KAAK,EAAC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAC,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,EAME;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAC,8BAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,EASE,oBAAC,OAAD;AAAS,IAAA,WAAW,EAAEH,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,EAYGJ,WAAW,IACV,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEI,WAAf;AAA4B,IAAA,EAAE,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,EAgBGJ,WAAW,IAAI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBlB,CADF;AAoBD,CA9BD;;AAgCA,eAAeJ,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport LiftLog from './LiftLog';\nimport Modal from './Modal';\nimport Backdrop from './Backdrop';\nimport './Workout.scss';\n\nconst Workout = props => {\n  const [isBlurred, setIsBlurred] = useState(false);\n  const [newSetModal, setNewSetModal] = useState(false);\n  const [timesModal, setTimesModal] = useState(false);\n  const toggleModal = () => {\n    setNewSetPopup(!newSetPopup);\n    setIsBlurred(!isBlurred);\n  };\n  let test = isBlurred ? 'blurred' : '';\n\n  return (\n    <React.Fragment>\n      <div id=\"workout-screen\" className={test}>\n        <Link to=\"/\" class=\"upper-left\">\n          <button type=\"button\" class=\"arrow-button\">\n            &larr;\n          </button>\n        </Link>\n        <button type=\"button\" class=\"upper-right button-underline\">\n          TIMES\n        </button>\n        <LiftLog toggleModal={toggleModal} />\n      </div>\n      {newSetModal && (\n        <Modal toggle={toggleModal} id=\"new-set-modal\">\n        </Modal>\n      )}\n      {newSetModal && <Backdrop />}\n    </React.Fragment>\n  );\n};\n\nexport default Workout;\n"]},"metadata":{},"sourceType":"module"}