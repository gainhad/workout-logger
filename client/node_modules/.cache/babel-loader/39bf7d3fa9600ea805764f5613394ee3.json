{"ast":null,"code":"var _jsxFileName = \"/Users/Hadley/src/workout-logger/src/components/LiftLog.js\";\nimport React, { useState } from 'react';\n\nconst LiftLog = props => {\n  function selectPreviousLift() {\n    if (currentLiftIndex < lifts.length - 1) {\n      setCurrentLiftIndex(currentLiftIndex + 1);\n    }\n  }\n\n  function selectNextLift() {\n    if (currentLiftIndex > 0) {\n      setCurrentLiftIndex(currentLiftIndex - 1);\n    }\n  }\n\n  return React.createElement(\"div\", {\n    id: \"lift-log\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(LiftSelector, {\n    atEnd: currentLiftIndex === lifts.length - 1,\n    atBeginning: currentLiftIndex === 0,\n    currentLift: lifts[currentLiftIndex],\n    selectPreviousLift: selectPreviousLift,\n    selectNextLift: selectNextLift,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: props.toggleModal,\n    className: \"arrow-button\",\n    id: \"add-set-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"\\uFF0B\"));\n};\n\nconst LiftSelector = props => {\n  return React.createElement(\"div\", {\n    id: \"lift-selector\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, !props.atEnd ? React.createElement(\"button\", {\n    type: \"button\",\n    onClick: props.selectPreviousLift,\n    className: \"arrow-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"\\u2190\") : null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, props.currentLift.name.toUpperCase()), props.atBeginning ? React.createElement(\"button\", {\n    type: \"button\",\n    className: \"arrow-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"\\uFF0B\") : React.createElement(\"button\", {\n    type: \"button\",\n    className: \"arrow-button\",\n    onClick: props.selectNextLift,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"\\u2192\"));\n};\n\nconst InfoDisplay = props => {\n  const setList = props.sets.map((set, index) => React.createElement(\"div\", {\n    className: \"set\",\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"set-weight grid-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, set.weight), \" \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"lbs\")), React.createElement(\"div\", {\n    className: \"set-reps\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, set.reps), \" \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"reps\")), React.createElement(\"div\", {\n    className: \"set-rpe grid-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"@\"), \" \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, set.rpe))));\n  return React.createElement(\"div\", {\n    id: \"info-display\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, setList);\n};\n\nexport default LiftLog;","map":{"version":3,"sources":["/Users/Hadley/src/workout-logger/src/components/LiftLog.js"],"names":["React","useState","LiftLog","props","selectPreviousLift","currentLiftIndex","lifts","length","setCurrentLiftIndex","selectNextLift","toggleModal","LiftSelector","atEnd","currentLift","name","toUpperCase","atBeginning","InfoDisplay","setList","sets","map","set","index","weight","reps","rpe"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nconst LiftLog = props => {\n\n  function selectPreviousLift() {\n    if (currentLiftIndex < lifts.length - 1) {\n      setCurrentLiftIndex(currentLiftIndex + 1);\n    }\n  }\n\n  function selectNextLift() {\n    if (currentLiftIndex > 0) {\n      setCurrentLiftIndex(currentLiftIndex - 1);\n    }\n  }\n  return (\n    <div id=\"lift-log\">\n      <LiftSelector\n        atEnd={currentLiftIndex === lifts.length - 1}\n        atBeginning={currentLiftIndex === 0}\n        currentLift={lifts[currentLiftIndex]}\n        selectPreviousLift={selectPreviousLift}\n        selectNextLift={selectNextLift}\n      />\n          {/*<InfoDisplay sets={lifts[currentLiftIndex].sets} />*/}\n      <button type=\"button\" onClick={props.toggleModal} className=\"arrow-button\" id=\"add-set-button\">\n        &#65291;\n      </button>\n    </div>\n  );\n};\n\nconst LiftSelector = props => {\n  return (\n    <div id=\"lift-selector\">\n      {!props.atEnd ? (\n        <button\n          type=\"button\"\n          onClick={props.selectPreviousLift}\n          className=\"arrow-button\"\n        >\n          &larr;\n        </button>\n      ) : null}\n      <h2>{props.currentLift.name.toUpperCase()}</h2>\n      {props.atBeginning ? (\n        <button type=\"button\" className=\"arrow-button\">\n          &#65291;\n        </button>\n      ) : (\n        <button\n          type=\"button\"\n          className=\"arrow-button\"\n          onClick={props.selectNextLift}\n        >\n          &rarr;\n        </button>\n      )}\n    </div>\n  );\n};\n\nconst InfoDisplay = props => {\n  const setList = props.sets.map((set, index) => (\n    <div className=\"set\" key={index}>\n      <div className=\"set-weight grid-left\">\n        <b>{set.weight}</b> <span>lbs</span>\n      </div>\n      <div className=\"set-reps\">\n        <b>{set.reps}</b> <span>reps</span>\n      </div>\n      <div className=\"set-rpe grid-left\">\n        <span>@</span> <b>{set.rpe}</b>\n      </div>\n    </div>\n  ));\n  return <div id=\"info-display\">{setList}</div>;\n};\n\nexport default LiftLog;\n"]},"metadata":{},"sourceType":"module"}