{"ast":null,"code":"var _jsxFileName = \"/Users/Hadley/src/workout-logger/src/components/SetForm.js\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getCurrentLiftIndex, getSetsForCurrentLift, currentWorkoutActions } from '../redux/slices/currentWorkout';\nimport './SetForm.scss';\n\nconst SetForm = ({\n  setIndex = undefined,\n  closeForm,\n  closeModal,\n  onSetSubmit = null\n}) => {\n  const currentLiftIndex = useSelector(state => getCurrentLiftIndex(state));\n  const dispatch = useDispatch();\n\n  const submitSet = set => dispatch(currentWorkoutActions.addOrUpdateSet(set));\n\n  const currentLiftSets = useSelector(state => getSetsForCurrentLift(state));\n  console.log(setIndex);\n  const currentSet = isNaN(setIndex) ? null : currentLiftSets[setIndex];\n  console.log(currentSet);\n\n  function onSubmit(event) {\n    event.preventDefault();\n    submitSet({\n      liftIndex: currentLiftIndex,\n      setIndex: setIndex,\n      set: {\n        weight: Number(event.target.weight.value),\n        reps: Number(event.target.reps.value),\n        rpe: Number(event.target.rpe.value)\n      }\n    });\n\n    if (onSetSubmit) {\n      onSetSubmit();\n    } else {\n      closeModal();\n    }\n  }\n\n  return React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    id: \"new-set\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"weight\",\n    type: \"number\",\n    required: true,\n    placeholder: \"weight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    name: \"reps\",\n    type: \"number\",\n    required: true,\n    placeholder: \"reps\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    name: \"rpe\",\n    type: \"number\",\n    required: true,\n    placeholder: \"rpe\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"button\",\n    value: \"CANCEL\",\n    className: \"cancel-button\",\n    onClick: closeModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"ENTER\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }));\n};\n\nexport default SetForm;","map":{"version":3,"sources":["/Users/Hadley/src/workout-logger/src/components/SetForm.js"],"names":["React","useSelector","useDispatch","getCurrentLiftIndex","getSetsForCurrentLift","currentWorkoutActions","SetForm","setIndex","undefined","closeForm","closeModal","onSetSubmit","currentLiftIndex","state","dispatch","submitSet","set","addOrUpdateSet","currentLiftSets","console","log","currentSet","isNaN","onSubmit","event","preventDefault","liftIndex","weight","Number","target","value","reps","rpe"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,mBADF,EAEEC,qBAFF,EAGEC,qBAHF,QAIO,gCAJP;AAKA,OAAO,gBAAP;;AAEA,MAAMC,OAAO,GAAG,CAAC;AACfC,EAAAA,QAAQ,GAAGC,SADI;AAEfC,EAAAA,SAFe;AAGfC,EAAAA,UAHe;AAIfC,EAAAA,WAAW,GAAG;AAJC,CAAD,KAKV;AACJ,QAAMC,gBAAgB,GAAGX,WAAW,CAACY,KAAK,IAAIV,mBAAmB,CAACU,KAAD,CAA7B,CAApC;AACA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;;AACA,QAAMa,SAAS,GAAGC,GAAG,IAAIF,QAAQ,CAACT,qBAAqB,CAACY,cAAtB,CAAqCD,GAArC,CAAD,CAAjC;;AACA,QAAME,eAAe,GAAGjB,WAAW,CAACY,KAAK,IAAIT,qBAAqB,CAACS,KAAD,CAA/B,CAAnC;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYb,QAAZ;AACA,QAAMc,UAAU,GAAGC,KAAK,CAACf,QAAD,CAAL,GAAkB,IAAlB,GAAyBW,eAAe,CAACX,QAAD,CAA3D;AAEAY,EAAAA,OAAO,CAACC,GAAR,CAAYC,UAAZ;;AAEA,WAASE,QAAT,CAAkBC,KAAlB,EAAyB;AACvBA,IAAAA,KAAK,CAACC,cAAN;AACAV,IAAAA,SAAS,CAAC;AACRW,MAAAA,SAAS,EAAEd,gBADH;AAERL,MAAAA,QAAQ,EAAEA,QAFF;AAGRS,MAAAA,GAAG,EAAE;AACHW,QAAAA,MAAM,EAAEC,MAAM,CAACJ,KAAK,CAACK,MAAN,CAAaF,MAAb,CAAoBG,KAArB,CADX;AAEHC,QAAAA,IAAI,EAAEH,MAAM,CAACJ,KAAK,CAACK,MAAN,CAAaE,IAAb,CAAkBD,KAAnB,CAFT;AAGHE,QAAAA,GAAG,EAAEJ,MAAM,CAACJ,KAAK,CAACK,MAAN,CAAaG,GAAb,CAAiBF,KAAlB;AAHR;AAHG,KAAD,CAAT;;AASA,QAAInB,WAAJ,EAAiB;AACfA,MAAAA,WAAW;AACZ,KAFD,MAEO;AACLD,MAAAA,UAAU;AACX;AACF;;AAED,SACE;AAAM,IAAA,QAAQ,EAAEa,QAAhB;AAA0B,IAAA,EAAE,EAAC,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,IAAI,EAAC,QAA1B;AAAmC,IAAA,QAAQ,EAAE,IAA7C;AAAmD,IAAA,WAAW,EAAC,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,QAAxB;AAAiC,IAAA,QAAQ,EAAE,IAA3C;AAAiD,IAAA,WAAW,EAAC,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAO,IAAA,IAAI,EAAC,KAAZ;AAAkB,IAAA,IAAI,EAAC,QAAvB;AAAgC,IAAA,QAAQ,EAAE,IAA1C;AAAgD,IAAA,WAAW,EAAC,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,SAAS,EAAC,eAHZ;AAIE,IAAA,OAAO,EAAEb,UAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAUE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAcD,CA/CD;;AAiDA,eAAeJ,OAAf","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  getCurrentLiftIndex,\n  getSetsForCurrentLift,\n  currentWorkoutActions\n} from '../redux/slices/currentWorkout';\nimport './SetForm.scss';\n\nconst SetForm = ({\n  setIndex = undefined,\n  closeForm,\n  closeModal,\n  onSetSubmit = null\n}) => {\n  const currentLiftIndex = useSelector(state => getCurrentLiftIndex(state));\n  const dispatch = useDispatch();\n  const submitSet = set => dispatch(currentWorkoutActions.addOrUpdateSet(set));\n  const currentLiftSets = useSelector(state => getSetsForCurrentLift(state));\n  console.log(setIndex);\n  const currentSet = isNaN(setIndex) ? null : currentLiftSets[setIndex];\n\n  console.log(currentSet);\n\n  function onSubmit(event) {\n    event.preventDefault();\n    submitSet({\n      liftIndex: currentLiftIndex,\n      setIndex: setIndex,\n      set: {\n        weight: Number(event.target.weight.value),\n        reps: Number(event.target.reps.value),\n        rpe: Number(event.target.rpe.value)\n      }\n    });\n    if (onSetSubmit) {\n      onSetSubmit();\n    } else {\n      closeModal();\n    }\n  }\n\n  return (\n    <form onSubmit={onSubmit} id=\"new-set\">\n      <input name=\"weight\" type=\"number\" required={true} placeholder=\"weight\" />\n      <input name=\"reps\" type=\"number\" required={true} placeholder=\"reps\" />\n      <input name=\"rpe\" type=\"number\" required={true} placeholder=\"rpe\" />\n      <input\n        type=\"button\"\n        value=\"CANCEL\"\n        className=\"cancel-button\"\n        onClick={closeModal}\n      />\n      <input type=\"submit\" value=\"ENTER\" />\n    </form>\n  );\n};\n\nexport default SetForm;\n"]},"metadata":{},"sourceType":"module"}