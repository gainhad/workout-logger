{"ast":null,"code":"var _jsxFileName = \"/Users/Hadley/src/workout-logger/src/components/SingleDataView.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { getE1RMHistoryForLift } from '../redux/slices/liftHistory';\nimport { getMeasurementHistory } from '../redux/slices/measurementHistory';\nimport { ResponsiveContainer, LineChart, Line, XAxis, YAxis, Tooltip } from 'recharts';\nimport './SingleDataView.scss';\n\nconst SingleDataView = props => {\n  const name = props.match.params.dataItem;\n  const type = props.match.params.dataType;\n  let selector;\n\n  if (type === 'lift') {\n    selector = getE1RMHistoryForLift;\n  } else {\n    selector = getMeasurementHistory;\n  }\n\n  const data = useSelector(state => selector(state, {\n    name: name\n  }));\n  const unit = type === 'lift' ? 'e1rm' : data.unit;\n\n  function formatDate(timestamp) {\n    let date = new Date(timestamp);\n    return date.getMonth() + '/' + date.getDate();\n  }\n\n  console.log(data);\n  data.entries.forEach(entry => entry.timestamp = formatDate(entry.timestamp));\n  return React.createElement(\"div\", {\n    id: \"single-measurement-view\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/view\",\n    className: \"upper-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"arrow-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"\\u2190\")), React.createElement(\"h1\", {\n    className: \"lift-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, name.toUpperCase()), React.createElement(\"div\", {\n    className: \"graph-area\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(ResponsiveContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(LineChart, {\n    data: data.entries,\n    margin: {\n      top: 0,\n      right: 5,\n      bottom: 0,\n      left: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Line, {\n    dataKey: \"e1rm\",\n    stroke: \"rgba(255, 255, 255, .8)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(XAxis, {\n    dataKey: \"timestamp\",\n    stroke: \"rgba(255, 255, 255, 1)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    type: \"number\",\n    domain: ['dataMin - 50', 'dataMax + 50'],\n    width: 35,\n    stroke: \"rgba(255, 255, 255, 1)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    contentStyle: {\n      backgroundColor: 'rgba(50, 50, 50, .85)',\n      border: '1px solid rgba(255, 255, 255, .3)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })))), React.createElement(\"table\", {\n    id: \"e1rm-table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"DATE\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, unit.toUpperCase()))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, data.entries.map(entry => React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, entry.timestamp), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, entry.e1rm))))));\n};\n\nexport default SingleDataView;","map":{"version":3,"sources":["/Users/Hadley/src/workout-logger/src/components/SingleDataView.js"],"names":["React","Link","useSelector","getE1RMHistoryForLift","getMeasurementHistory","ResponsiveContainer","LineChart","Line","XAxis","YAxis","Tooltip","SingleDataView","props","name","match","params","dataItem","type","dataType","selector","data","state","unit","formatDate","timestamp","date","Date","getMonth","getDate","console","log","entries","forEach","entry","toUpperCase","top","right","bottom","left","backgroundColor","border","map","e1rm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { getE1RMHistoryForLift } from '../redux/slices/liftHistory';\nimport { getMeasurementHistory } from '../redux/slices/measurementHistory';\nimport {\n  ResponsiveContainer,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip\n} from 'recharts';\nimport './SingleDataView.scss';\n\nconst SingleDataView = props => {\n  const name = props.match.params.dataItem;\n  const type = props.match.params.dataType;\n  let selector;\n  if (type === 'lift') {\n    selector = getE1RMHistoryForLift;\n  } else {\n    selector = getMeasurementHistory;\n  }\n  const data = useSelector(state => selector(state, { name: name }));\n  const unit = type === 'lift' ? 'e1rm' : data.unit;\n  function formatDate(timestamp) {\n    let date = new Date(timestamp);\n    return date.getMonth() + '/' + date.getDate();\n  }\n  console.log(data);\n    data.entries.forEach(\n      entry => (entry.timestamp = formatDate(entry.timestamp))\n    );\n  return (\n    <div id=\"single-measurement-view\">\n      <Link to=\"/view\" className=\"upper-left\">\n        <button type=\"button\" className=\"arrow-button\">\n          &larr;\n        </button>\n      </Link>\n      <h1 className=\"lift-title\">{name.toUpperCase()}</h1>\n      <div className=\"graph-area\">\n        <ResponsiveContainer>\n          <LineChart\n            data={data.entries}\n            margin={{ top: 0, right: 5, bottom: 0, left: 0 }}\n          >\n            <Line dataKey=\"e1rm\" stroke=\"rgba(255, 255, 255, .8)\" />\n            <XAxis dataKey=\"timestamp\" stroke=\"rgba(255, 255, 255, 1)\" />\n            <YAxis\n              type=\"number\"\n              domain={['dataMin - 50', 'dataMax + 50']}\n              width={35}\n              stroke=\"rgba(255, 255, 255, 1)\"\n            />\n            <Tooltip\n              contentStyle={{\n                backgroundColor: 'rgba(50, 50, 50, .85)',\n                border: '1px solid rgba(255, 255, 255, .3)'\n              }}\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n      <table id=\"e1rm-table\">\n        <thead>\n          <tr>\n            <th>DATE</th>\n            <th>{unit.toUpperCase()}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.entries.map(entry => (\n            <tr>\n              <td>{entry.timestamp}</td>\n              <td>{entry.e1rm}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default SingleDataView;\n"]},"metadata":{},"sourceType":"module"}