{"ast":null,"code":"import _slicedToArray from \"/Users/Hadley/src/workout-logger/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Hadley/src/workout-logger/src/components/MeasurementForm.js\";\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { measurementHistoryActions } from '../redux/slices/measurementHistory';\nimport './MeasurementForm.scss';\n\nconst MeasurementForm = props => {\n  const _useState = useState(undefined),\n        _useState2 = _slicedToArray(_useState, 2),\n        measurement = _useState2[0],\n        setMeasurement = _useState2[1];\n\n  const dispatch = useDispatch();\n\n  function onSubmit(event) {\n    event.preventDefault();\n    props.closeModal();\n  }\n\n  return React.createElement(\"form\", {\n    id: \"measurement-form\",\n    className: \"form-one\",\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"measurement-input\",\n    className: \"measurement-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, props.type, \":\"), React.createElement(\"input\", {\n    id: \"measurement-input\",\n    type: \"number\",\n    required: true,\n    value: measurement,\n    onChange: event => setMeasurement(event.target.value),\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"form-button measurement-form-button\",\n    onClick: props.closeModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"CANCEL\"), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"form-button measurement-form-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"ENTER\"));\n};\n\nexport default MeasurementForm;","map":{"version":3,"sources":["/Users/Hadley/src/workout-logger/src/components/MeasurementForm.js"],"names":["React","useState","useDispatch","measurementHistoryActions","MeasurementForm","props","undefined","measurement","setMeasurement","dispatch","onSubmit","event","preventDefault","closeModal","type","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,yBAAT,QAA0C,oCAA1C;AACA,OAAO,wBAAP;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAAA,oBACOJ,QAAQ,CAACK,SAAD,CADf;AAAA;AAAA,QACxBC,WADwB;AAAA,QACXC,cADW;;AAE/B,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;;AACA,WAASQ,QAAT,CAAkBC,KAAlB,EAAyB;AACvBA,IAAAA,KAAK,CAACC,cAAN;AACAP,IAAAA,KAAK,CAACQ,UAAN;AACD;;AAED,SACE;AAAM,IAAA,EAAE,EAAC,kBAAT;AAA4B,IAAA,SAAS,EAAC,UAAtC;AAAiD,IAAA,QAAQ,EAAEH,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,GAAG,EAAC,mBAAX;AAA+B,IAAA,SAAS,EAAC,wBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CAACS,IADT,MADF,EAIE;AACE,IAAA,EAAE,EAAC,mBADL;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,QAAQ,EAAE,IAHZ;AAIE,IAAA,KAAK,EAAEP,WAJT;AAKE,IAAA,QAAQ,EAAEI,KAAK,IAAIH,cAAc,CAACG,KAAK,CAACI,MAAN,CAAaC,KAAd,CALnC;AAME,IAAA,SAAS,MANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAYE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,qCAFZ;AAGE,IAAA,OAAO,EAAEX,KAAK,CAACQ,UAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,EAmBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,qCAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAnBF,CADF;AAyBD,CAjCD;;AAmCA,eAAeT,eAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { measurementHistoryActions } from '../redux/slices/measurementHistory';\nimport './MeasurementForm.scss';\n\nconst MeasurementForm = props => {\n  const [measurement, setMeasurement] = useState(undefined);\n  const dispatch = useDispatch();\n  function onSubmit(event) {\n    event.preventDefault();\n    props.closeModal();\n  }\n\n  return (\n    <form id=\"measurement-form\" className=\"form-one\" onSubmit={onSubmit}>\n      <label for=\"measurement-input\" className=\"measurement-form-label\">\n        {props.type}:\n      </label>\n      <input\n        id=\"measurement-input\"\n        type=\"number\"\n        required={true}\n        value={measurement}\n        onChange={event => setMeasurement(event.target.value)}\n        autoFocus\n      />\n      <button\n        type=\"button\"\n        className=\"form-button measurement-form-button\"\n        onClick={props.closeModal}\n      >\n        CANCEL\n      </button>\n      <button type=\"submit\" className=\"form-button measurement-form-button\">\n        ENTER\n      </button>\n    </form>\n  );\n};\n\nexport default MeasurementForm;\n"]},"metadata":{},"sourceType":"module"}