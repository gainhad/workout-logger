{"ast":null,"code":"import _slicedToArray from \"/Users/Hadley/src/workout-logger/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Hadley/src/workout-logger/src/components/MeasurementMenu.js\";\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Modal from './Modal';\nimport MeasurementForm from './MeasurementForm';\nimport './MeasurementMenu.scss';\n\nconst MeasurementMenu = () => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        measurementModalOpen = _useState2[0],\n        setMeasurementModalOpen = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        measurementType = _useState4[0],\n        setMeasurementType = _useState4[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    id: \"measurement-menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"arrow-button upper-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"\\u2190\")), React.createElement(\"div\", {\n    id: \"measurement-selection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"button-one measurement-button\",\n    onClick: () => {\n      setMeasurementType('WEIGHT');\n      setMeasurementModalOpen(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"LOG WEIGHT\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"button-one measurement-button\",\n    onClick: () => {\n      setMeasurementType('WAIST');\n      setMeasurementModalOpen(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"LOG WAIST\"))), React.createElement(Modal, {\n    isOpen: measurementModalOpen,\n    onClose: () => setMeasurementModalOpen(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(MeasurementForm, {\n    type: measurementType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })));\n};\n\nexport default MeasurementMenu;","map":{"version":3,"sources":["/Users/Hadley/src/workout-logger/src/components/MeasurementMenu.js"],"names":["React","useState","Link","Modal","MeasurementForm","MeasurementMenu","measurementModalOpen","setMeasurementModalOpen","measurementType","setMeasurementType"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAO,wBAAP;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA,oBAC4BJ,QAAQ,CAAC,KAAD,CADpC;AAAA;AAAA,QACrBK,oBADqB;AAAA,QACCC,uBADD;;AAAA,qBAEkBN,QAAQ,CAAC,EAAD,CAF1B;AAAA;AAAA,QAErBO,eAFqB;AAAA,QAEJC,kBAFI;;AAI5B,SACE,0CACE;AAAK,IAAA,EAAE,EAAC,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,yBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,EAME;AAAK,IAAA,EAAE,EAAC,uBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,+BAAhC;AAAgE,IAAA,OAAO,EAAE,MAAI;AAACA,MAAAA,kBAAkB,CAAC,QAAD,CAAlB;AAA8BF,MAAAA,uBAAuB,CAAC,IAAD,CAAvB;AAA+B,KAA3I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAIE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,+BAAhC;AAAgE,IAAA,OAAO,EAAE,MAAI;AAACE,MAAAA,kBAAkB,CAAC,OAAD,CAAlB;AAA6BF,MAAAA,uBAAuB,CAAC,IAAD,CAAvB;AAA+B,KAA1I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,CANF,CADF,EAgBA,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAED,oBAAf;AAAqC,IAAA,OAAO,EAAE,MAAIC,uBAAuB,CAAC,KAAD,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEC,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAhBA,CADF;AAsBD,CA1BD;;AA4BA,eAAeH,eAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Modal from './Modal';\nimport MeasurementForm from './MeasurementForm';\nimport './MeasurementMenu.scss';\n\nconst MeasurementMenu = () => {\n  const [measurementModalOpen, setMeasurementModalOpen] = useState(false);\n  const [measurementType, setMeasurementType] = useState('');\n\n  return (\n    <>\n      <div id=\"measurement-menu\">\n        <Link to=\"/\">\n          <button type=\"button\" className=\"arrow-button upper-left\">\n            &larr;\n          </button>\n        </Link>\n        <div id=\"measurement-selection\">\n          <button type=\"button\" className=\"button-one measurement-button\" onClick={()=>{setMeasurementType('WEIGHT'); setMeasurementModalOpen(true);}}>\n            LOG WEIGHT\n          </button>\n          <button type=\"button\" className=\"button-one measurement-button\" onClick={()=>{setMeasurementType('WAIST'); setMeasurementModalOpen(true);}}>\n            LOG WAIST\n          </button>\n        </div>\n      </div>\n    <Modal isOpen={measurementModalOpen} onClose={()=>setMeasurementModalOpen(false)}>\n        <MeasurementForm type={measurementType}/>\n      </Modal>\n    </>\n  );\n};\n\nexport default MeasurementMenu;\n"]},"metadata":{},"sourceType":"module"}