{"ast":null,"code":"import _slicedToArray from \"/Users/Hadley/src/workout-logger/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Hadley/src/workout-logger/src/components/Workout.js\";\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport LiftLog from './LiftLog';\nimport Modal from './Modal';\nimport Backdrop from './Backdrop';\nimport NewSet from './NewSet';\nimport './Workout.scss';\n\nconst Workout = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isBlurred = _useState2[0],\n        setIsBlurred = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newSetModal = _useState4[0],\n        setNewSetModal = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        timesModal = _useState6[0],\n        setTimesModal = _useState6[1];\n\n  function toggleSetModal() {\n    setNewSetModal(!newSetModal);\n    setIsBlurred(!isBlurred);\n  }\n\n  function toggleTimesModal() {\n    setTimesModal(!timesModal);\n    setIsBlurred(!isBlurred);\n  }\n\n  let test = isBlurred ? 'blurred' : '';\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"workout-screen\",\n    className: test,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    class: \"upper-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    class: \"arrow-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"\\u2190\")), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: toggleTimesModal,\n    class: \"upper-right button-underline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"TIMES\"), React.createElement(LiftLog, {\n    toggleModal: toggleSetModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), newSetModal && React.createElement(Modal, {\n    toggle: toggleSetModal,\n    id: \"set-modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(NewSet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), timesModal && React.createElement(Modal, {\n    toggleButton: false,\n    toggle: toggleTimesModal,\n    id: \"times-modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    onClick: toggleTimesModal,\n    class: \"upper-right button-underline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"TIMES\")), (newSetModal || timesModal) && React.createElement(Backdrop, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }));\n};\n\nexport default Workout;","map":{"version":3,"sources":["/Users/Hadley/src/workout-logger/src/components/Workout.js"],"names":["React","useState","Link","LiftLog","Modal","Backdrop","NewSet","Workout","props","isBlurred","setIsBlurred","newSetModal","setNewSetModal","timesModal","setTimesModal","toggleSetModal","toggleTimesModal","test"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,gBAAP;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AAAA,oBACWP,QAAQ,CAAC,KAAD,CADnB;AAAA;AAAA,QAChBQ,SADgB;AAAA,QACLC,YADK;;AAAA,qBAEeT,QAAQ,CAAC,KAAD,CAFvB;AAAA;AAAA,QAEhBU,WAFgB;AAAA,QAEHC,cAFG;;AAAA,qBAGaX,QAAQ,CAAC,KAAD,CAHrB;AAAA;AAAA,QAGhBY,UAHgB;AAAA,QAGJC,aAHI;;AAIvB,WAASC,cAAT,GAA0B;AACxBH,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACAD,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD;;AACD,WAASO,gBAAT,GAA4B;AAC1BF,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACAH,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD;;AACD,MAAIQ,IAAI,GAAGR,SAAS,GAAG,SAAH,GAAe,EAAnC;AAEA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,EAAE,EAAC,gBAAR;AAAyB,IAAA,SAAS,EAAEQ,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAa,IAAA,KAAK,EAAC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAC,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,EAME;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAED,gBAFX;AAGE,IAAA,KAAK,EAAC,8BAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,EAaE,oBAAC,OAAD;AAAS,IAAA,WAAW,EAAED,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF,EAgBGJ,WAAW,IACV,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEI,cAAf;AAA+B,IAAA,EAAE,EAAC,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAjBJ,EAqBGF,UAAU,IACT,oBAAC,KAAD;AAAO,IAAA,YAAY,EAAE,KAArB;AAA4B,IAAA,MAAM,EAAEG,gBAApC;AAAsD,IAAA,EAAE,EAAC,aAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAEA,gBAFX;AAGE,IAAA,KAAK,EAAC,8BAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAtBJ,EAgCG,CAACL,WAAW,IAAIE,UAAhB,KAA+B,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhClC,CADF;AAoCD,CAlDD;;AAoDA,eAAeN,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport LiftLog from './LiftLog';\nimport Modal from './Modal';\nimport Backdrop from './Backdrop';\nimport NewSet from './NewSet';\nimport './Workout.scss';\n\nconst Workout = props => {\n  const [isBlurred, setIsBlurred] = useState(false);\n  const [newSetModal, setNewSetModal] = useState(false);\n  const [timesModal, setTimesModal] = useState(false);\n  function toggleSetModal() {\n    setNewSetModal(!newSetModal);\n    setIsBlurred(!isBlurred);\n  }\n  function toggleTimesModal() {\n    setTimesModal(!timesModal);\n    setIsBlurred(!isBlurred);\n  }\n  let test = isBlurred ? 'blurred' : '';\n\n  return (\n    <React.Fragment>\n      <div id=\"workout-screen\" className={test}>\n        <Link to=\"/\" class=\"upper-left\">\n          <button type=\"button\" class=\"arrow-button\">\n            &larr;\n          </button>\n        </Link>\n        <button\n          type=\"button\"\n          onClick={toggleTimesModal}\n          class=\"upper-right button-underline\"\n        >\n          TIMES\n        </button>\n        <LiftLog toggleModal={toggleSetModal} />\n      </div>\n      {newSetModal && (\n        <Modal toggle={toggleSetModal} id=\"set-modal\">\n          <NewSet />\n        </Modal>\n      )}\n      {timesModal && (\n        <Modal toggleButton={false} toggle={toggleTimesModal} id=\"times-modal\">\n          <button\n            type=\"button\"\n            onClick={toggleTimesModal}\n            class=\"upper-right button-underline\"\n          >\n            TIMES\n          </button>\n        </Modal>\n      )}\n      {(newSetModal || timesModal) && <Backdrop />}\n    </React.Fragment>\n  );\n};\n\nexport default Workout;\n"]},"metadata":{},"sourceType":"module"}