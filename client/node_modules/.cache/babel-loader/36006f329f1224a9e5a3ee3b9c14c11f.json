{"ast":null,"code":"import _slicedToArray from \"/Users/Hadley/src/workout-logger/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Hadley/src/workout-logger/src/components/Workout.js\";\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport LiftLog from './LiftLog';\nimport Modal from './Modal';\nimport E1rmDisplay from './E1rmDisplay';\nimport RestTimer from './RestTimer';\nimport TimesDisplay from './TimesDisplay';\nimport { dispatch } from 'react-redux';\nimport { currentWorkoutActions } from '../redux/slices/currentWorkout';\nimport './Workout.scss';\n\nconst Workout = props => {\n  const dispatch = useDispatch();\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        timesDisplayModalOpen = _useState2[0],\n        setTimesDisplayModalOpen = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        workoutStarted = _useState4[0],\n        setWorkoutStarted = _useState4[1];\n\n  useEffect(() => {\n    if (!workoutStarted) {\n      dispatch(currentWorkoutActions.addTimeStarted(Date.now()));\n    }\n  });\n  return React.createElement(\"div\", {\n    id: \"workout-screen\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    className: \"upper-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"arrow-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"\\u2190\")), React.createElement(RestTimer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setTimesDisplayModalOpen(true),\n    className: \"upper-right button-underline\",\n    id: \"times-toggle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"TIMES\"), React.createElement(LiftLog, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(E1rmDisplay, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    id: \"lift-history-button\",\n    className: \"arrow-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Lift History\"), React.createElement(Modal, {\n    isOpen: timesDisplayModalOpen,\n    onClose: () => setTimesDisplayModalOpen(false),\n    id: \"times-modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(TimesDisplay, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })));\n};\n\nexport default Workout;","map":{"version":3,"sources":["/Users/Hadley/src/workout-logger/src/components/Workout.js"],"names":["React","useState","Link","LiftLog","Modal","E1rmDisplay","RestTimer","TimesDisplay","dispatch","currentWorkoutActions","Workout","props","useDispatch","timesDisplayModalOpen","setTimesDisplayModalOpen","workoutStarted","setWorkoutStarted","useEffect","addTimeStarted","Date","now"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,qBAAT,QAAsC,gCAAtC;AACA,OAAO,gBAAP;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACvB,QAAMH,QAAQ,GAAGI,WAAW,EAA5B;;AADuB,oBAEmCX,QAAQ,CAAC,KAAD,CAF3C;AAAA;AAAA,QAEhBY,qBAFgB;AAAA,QAEOC,wBAFP;;AAAA,qBAGqBb,QAAQ,CAAC,KAAD,CAH7B;AAAA;AAAA,QAGhBc,cAHgB;AAAA,QAGAC,iBAHA;;AAIvBC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACF,cAAL,EAAqB;AACnBP,MAAAA,QAAQ,CAACC,qBAAqB,CAACS,cAAtB,CAAqCC,IAAI,CAACC,GAAL,EAArC,CAAD,CAAR;AACD;AACF,GAJQ,CAAT;AAMA,SACE;AAAK,IAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAa,IAAA,SAAS,EAAC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,EAME,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAE,MAAMN,wBAAwB,CAAC,IAAD,CAFzC;AAGE,IAAA,SAAS,EAAC,8BAHZ;AAIE,IAAA,EAAE,EAAC,cAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF,EAeE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EAgBE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,EAiBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,EAAE,EAAC,qBAAzB;AAA+C,IAAA,SAAS,EAAC,cAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjBF,EAoBE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAED,qBADV;AAEE,IAAA,OAAO,EAAE,MAAMC,wBAAwB,CAAC,KAAD,CAFzC;AAGE,IAAA,EAAE,EAAC,aAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CApBF,CADF;AA8BD,CAxCD;;AA0CA,eAAeJ,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport LiftLog from './LiftLog';\nimport Modal from './Modal';\nimport E1rmDisplay from './E1rmDisplay';\nimport RestTimer from './RestTimer';\nimport TimesDisplay from './TimesDisplay';\nimport { dispatch } from 'react-redux';\nimport { currentWorkoutActions } from '../redux/slices/currentWorkout';\nimport './Workout.scss';\n\nconst Workout = props => {\n  const dispatch = useDispatch();\n  const [timesDisplayModalOpen, setTimesDisplayModalOpen] = useState(false);\n  const [workoutStarted, setWorkoutStarted] = useState(false);\n  useEffect(() => {\n    if (!workoutStarted) {\n      dispatch(currentWorkoutActions.addTimeStarted(Date.now()))\n    }\n  })\n\n  return (\n    <div id=\"workout-screen\">\n      <Link to=\"/\" className=\"upper-left\">\n        <button type=\"button\" className=\"arrow-button\">\n          &larr;\n        </button>\n      </Link>\n      <RestTimer />\n      <button\n        type=\"button\"\n        onClick={() => setTimesDisplayModalOpen(true)}\n        className=\"upper-right button-underline\"\n        id=\"times-toggle\"\n      >\n        TIMES\n      </button>\n      <LiftLog />\n      <E1rmDisplay />\n      <button type=\"button\" id=\"lift-history-button\" className=\"arrow-button\">\n        Lift History\n      </button>\n      <Modal\n        isOpen={timesDisplayModalOpen}\n        onClose={() => setTimesDisplayModalOpen(false)}\n        id=\"times-modal\"\n      >\n        <TimesDisplay />\n      </Modal>\n    </div>\n  );\n};\n\nexport default Workout;\n"]},"metadata":{},"sourceType":"module"}