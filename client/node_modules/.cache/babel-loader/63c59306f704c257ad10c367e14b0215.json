{"ast":null,"code":"import { createSlice } from 'redux-starter-kit';\nconst initialState = {\n  lifts: [{\n    name: 'SQUAT',\n    sets: [{\n      weight: 255,\n      reps: 10,\n      rpe: 6\n    }, {\n      weight: 287,\n      reps: 7,\n      rpe: 7\n    }]\n  }, {\n    name: 'DEADLIFT',\n    sets: []\n  }, {\n    name: 'BENCH PRESS',\n    sets: []\n  }],\n  currentLiftIndex: 0\n};\n\nfunction addLiftReducer(state, action) {\n  state.lifts.push({\n    name: action.payload.name,\n    sets: []\n  });\n}\n\nfunction deleteLiftReducer(state, action) {\n  state.lifts.splice(action.payload.index, 1);\n}\n\nfunction renameLiftReducer(state, action) {\n  state.lifts[action.payload.index].name = action.payload.name;\n}\n\nfunction addSetReducer(state, action) {\n  state.lifts[action.payload.liftIndex].sets.push(action.payload.set);\n}\n\nfunction deleteSetReducer(state, action) {\n  state.lifts[action.payload.liftIndex].sets.splice(action.payload.setIndex, 1);\n}\n\nfunction updateSetReducer(state, action) {\n  state.lifts[action.payload.liftIndex].sets[action.payload.setIndex] = action.payload.updatedSet;\n}\n\nconst currentWorkout = createSlice({\n  slice: 'currentWorkout',\n  initialState: initialState,\n  reducers: {\n    addLift: addLiftReducer,\n    deleteLift: deleteLiftReducer,\n    renameLift: renameLiftReducer,\n    addSet: addSetReducer,\n    deleteSet: deleteSetReducer,\n    updateSet: updateSetReducer\n  }\n});\nconst actions = currentWorkout.actions,\n      reducer = currentWorkout.reducer;\nconst addLift = actions.addLift,\n      deleteLift = actions.deleteLift,\n      renameLift = actions.renameLift,\n      deleteSet = actions.deleteSet;\nexport { addLift, deleteLift, renameLift, deleteSet };\nexport { initialState };\nexport default reducer;","map":{"version":3,"sources":["/Users/Hadley/src/workout-logger/src/redux/slices/currentWorkout.js"],"names":["createSlice","initialState","lifts","name","sets","weight","reps","rpe","currentLiftIndex","addLiftReducer","state","action","push","payload","deleteLiftReducer","splice","index","renameLiftReducer","addSetReducer","liftIndex","set","deleteSetReducer","setIndex","updateSetReducer","updatedSet","currentWorkout","slice","reducers","addLift","deleteLift","renameLift","addSet","deleteSet","updateSet","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from 'redux-starter-kit';\n\nconst initialState = {\n  lifts: [\n    {\n      name: 'SQUAT',\n      sets: [\n        { weight: 255, reps: 10, rpe: 6 },\n        { weight: 287, reps: 7, rpe: 7 }\n      ]\n    },\n    { name: 'DEADLIFT', sets: [] },\n    { name: 'BENCH PRESS', sets: [] }\n  ],\n  currentLiftIndex: 0\n};\n\nfunction addLiftReducer(state, action) {\n  state.lifts.push({ name: action.payload.name, sets: [] });\n}\n\nfunction deleteLiftReducer(state, action) {\n  state.lifts.splice(action.payload.index, 1);\n}\n\nfunction renameLiftReducer(state, action) {\n  state.lifts[action.payload.index].name = action.payload.name;\n}\n\nfunction addSetReducer(state, action) {\n  state.lifts[action.payload.liftIndex].sets.push(action.payload.set);\n}\n\nfunction deleteSetReducer(state, action) {\n  state.lifts[action.payload.liftIndex].sets.splice(action.payload.setIndex, 1);\n}\n\nfunction updateSetReducer(state, action) {\n state.lifts[action.payload.liftIndex].sets[action.payload.setIndex] = action.payload.updatedSet;\n}\n\nconst currentWorkout = createSlice({\n  slice: 'currentWorkout',\n  initialState: initialState,\n  reducers: {\n    addLift: addLiftReducer,\n    deleteLift: deleteLiftReducer,\n    renameLift: renameLiftReducer,\n    addSet: addSetReducer,\n    deleteSet: deleteSetReducer,\n    updateSet: updateSetReducer\n  }\n});\n\nconst { actions, reducer } = currentWorkout;\nexport const { addLift, deleteLift, renameLift, deleteSet } = actions;\nexport { initialState };\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}