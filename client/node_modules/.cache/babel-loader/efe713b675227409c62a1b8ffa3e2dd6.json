{"ast":null,"code":"import _slicedToArray from \"/Users/Hadley/src/workout-logger/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Hadley/src/workout-logger/src/components/RestTimerDisplay.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { prettyDisplayTime } from '../utils/displayHelpers';\nimport { useInterval } from '../utils/customHooks';\nimport './RestTimerDisplay';\n\nconst RestTimerDisplay = props => {\n  const timer = useSelector(state => state.currentWorkout.restTimer);\n\n  const _useState = useState(NaN),\n        _useState2 = _slicedToArray(_useState, 2),\n        secondsRemaining = _useState2[0],\n        setSecondsRemaining = _useState2[1]; // Update timer every second.\n\n\n  useInterval(() => {\n    setSecondsRemaining(timer.duration - (Date.now() - timer.timeStarted) / 1000);\n  }, 1000);\n\n  if (secondsRemaining > 0) {\n    return React.createElement(\"div\", {\n      className: \"rest-timer-display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"REST COUNTDOWN: \", prettyDisplayTime(secondsRemaining));\n  } else {\n    return null;\n  }\n};\n\nexport default RestTimerDisplay;","map":{"version":3,"sources":["/Users/Hadley/src/workout-logger/src/components/RestTimerDisplay.js"],"names":["React","useState","useEffect","useSelector","prettyDisplayTime","useInterval","RestTimerDisplay","props","timer","state","currentWorkout","restTimer","NaN","secondsRemaining","setSecondsRemaining","duration","Date","now","timeStarted"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,iBAAT,QAAkC,yBAAlC;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAO,oBAAP;;AAGA,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAChC,QAAMC,KAAK,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,cAAN,CAAqBC,SAA/B,CAAzB;;AADgC,oBAEgBV,QAAQ,CAACW,GAAD,CAFxB;AAAA;AAAA,QAEzBC,gBAFyB;AAAA,QAEPC,mBAFO,kBAIhC;;;AACAT,EAAAA,WAAW,CAAC,MAAM;AAChBS,IAAAA,mBAAmB,CAChBN,KAAK,CAACO,QAAN,GAAiB,CAACC,IAAI,CAACC,GAAL,KAAaT,KAAK,CAACU,WAApB,IAAmC,IADpC,CAAnB;AAGD,GAJU,EAIR,IAJQ,CAAX;;AAMA,MAAIL,gBAAgB,GAAG,CAAvB,EAA0B;AACxB,WACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACmBT,iBAAiB,CAACS,gBAAD,CADpC,CADF;AAKD,GAND,MAMO;AACL,WACE,IADF;AAGD;AACF,CAtBD;;AAwBA,eAAeP,gBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { prettyDisplayTime } from '../utils/displayHelpers';\nimport { useInterval } from '../utils/customHooks';\nimport './RestTimerDisplay';\n\n\nconst RestTimerDisplay = props => {\n  const timer = useSelector(state => state.currentWorkout.restTimer);\n  const [secondsRemaining, setSecondsRemaining] = useState(NaN);\n  \n  // Update timer every second.\n  useInterval(() => {\n    setSecondsRemaining(\n      (timer.duration - (Date.now() - timer.timeStarted) / 1000) \n    );\n  }, 1000);\n\n  if (secondsRemaining > 0) {\n    return (\n      <div className=\"rest-timer-display\">\n        REST COUNTDOWN: {prettyDisplayTime(secondsRemaining)}\n      </div>\n    )\n  } else {\n    return (\n      null\n    )\n  }\n}\n\nexport default RestTimerDisplay;\n"]},"metadata":{},"sourceType":"module"}